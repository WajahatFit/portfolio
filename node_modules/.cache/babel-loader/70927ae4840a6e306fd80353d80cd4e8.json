{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Logger = void 0;\nconst path = require(\"path\");\nconst timestamp = () => new Date().toISOString();\nlet timer;\nconst wait = ms => new Promise(resolve => {\n  if (timer) timer.unref();\n  timer = setTimeout(() => resolve(null), ms);\n});\nfunction chomp(s) {\n  if (s.endsWith('\\n')) return s.replace(/\\n$/, '');\n  return s;\n}\nclass Logger {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(file) {\n    this.file = file;\n    this.flushing = Promise.resolve();\n    this.buffer = [];\n  }\n  log(msg) {\n    const stripAnsi = require('strip-ansi');\n    msg = stripAnsi(chomp(msg));\n    const lines = msg.split('\\n').map(l => `${timestamp()} ${l}`.trimEnd());\n    this.buffer.push(...lines);\n    // tslint:disable-next-line no-console\n    this.flush(50).catch(console.error);\n  }\n  async flush() {\n    let waitForMs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    await wait(waitForMs);\n    this.flushing = this.flushing.then(async () => {\n      if (this.buffer.length === 0) return;\n      const mylines = this.buffer;\n      this.buffer = [];\n      const fs = require('fs-extra');\n      await fs.mkdirp(path.dirname(this.file));\n      await fs.appendFile(this.file, mylines.join('\\n') + '\\n');\n    });\n    await this.flushing;\n  }\n}\nexports.Logger = Logger;","map":{"version":3,"names":["Object","defineProperty","exports","value","Logger","path","require","timestamp","Date","toISOString","timer","wait","ms","Promise","resolve","unref","setTimeout","chomp","s","endsWith","replace","constructor","file","flushing","buffer","log","msg","stripAnsi","lines","split","map","l","trimEnd","push","flush","catch","console","error","waitForMs","then","length","mylines","fs","mkdirp","dirname","appendFile","join"],"sources":["/Users/wajahatfit/Documents/labs/portfolio/portfolio/node_modules/@oclif/core/lib/errors/logger.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = void 0;\nconst path = require(\"path\");\nconst timestamp = () => new Date().toISOString();\nlet timer;\nconst wait = (ms) => new Promise(resolve => {\n    if (timer)\n        timer.unref();\n    timer = setTimeout(() => resolve(null), ms);\n});\nfunction chomp(s) {\n    if (s.endsWith('\\n'))\n        return s.replace(/\\n$/, '');\n    return s;\n}\nclass Logger {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(file) {\n        this.file = file;\n        this.flushing = Promise.resolve();\n        this.buffer = [];\n    }\n    log(msg) {\n        const stripAnsi = require('strip-ansi');\n        msg = stripAnsi(chomp(msg));\n        const lines = msg.split('\\n').map(l => `${timestamp()} ${l}`.trimEnd());\n        this.buffer.push(...lines);\n        // tslint:disable-next-line no-console\n        this.flush(50).catch(console.error);\n    }\n    async flush(waitForMs = 0) {\n        await wait(waitForMs);\n        this.flushing = this.flushing.then(async () => {\n            if (this.buffer.length === 0)\n                return;\n            const mylines = this.buffer;\n            this.buffer = [];\n            const fs = require('fs-extra');\n            await fs.mkdirp(path.dirname(this.file));\n            await fs.appendFile(this.file, mylines.join('\\n') + '\\n');\n        });\n        await this.flushing;\n    }\n}\nexports.Logger = Logger;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,MAAM,GAAG,KAAK,CAAC;AACvB,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,SAAS,GAAG,MAAM,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;AAChD,IAAIC,KAAK;AACT,MAAMC,IAAI,GAAIC,EAAE,IAAK,IAAIC,OAAO,CAACC,OAAO,IAAI;EACxC,IAAIJ,KAAK,EACLA,KAAK,CAACK,KAAK,EAAE;EACjBL,KAAK,GAAGM,UAAU,CAAC,MAAMF,OAAO,CAAC,IAAI,CAAC,EAAEF,EAAE,CAAC;AAC/C,CAAC,CAAC;AACF,SAASK,KAAK,CAACC,CAAC,EAAE;EACd,IAAIA,CAAC,CAACC,QAAQ,CAAC,IAAI,CAAC,EAChB,OAAOD,CAAC,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAC/B,OAAOF,CAAC;AACZ;AACA,MAAMd,MAAM,CAAC;EACT;EACAiB,WAAW,CAACC,IAAI,EAAE;IACd,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,QAAQ,GAAGV,OAAO,CAACC,OAAO,EAAE;IACjC,IAAI,CAACU,MAAM,GAAG,EAAE;EACpB;EACAC,GAAG,CAACC,GAAG,EAAE;IACL,MAAMC,SAAS,GAAGrB,OAAO,CAAC,YAAY,CAAC;IACvCoB,GAAG,GAAGC,SAAS,CAACV,KAAK,CAACS,GAAG,CAAC,CAAC;IAC3B,MAAME,KAAK,GAAGF,GAAG,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAACC,CAAC,IAAK,GAAExB,SAAS,EAAG,IAAGwB,CAAE,EAAC,CAACC,OAAO,EAAE,CAAC;IACvE,IAAI,CAACR,MAAM,CAACS,IAAI,CAAC,GAAGL,KAAK,CAAC;IAC1B;IACA,IAAI,CAACM,KAAK,CAAC,EAAE,CAAC,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EACvC;EACA,MAAMH,KAAK,GAAgB;IAAA,IAAfI,SAAS,uEAAG,CAAC;IACrB,MAAM3B,IAAI,CAAC2B,SAAS,CAAC;IACrB,IAAI,CAACf,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACgB,IAAI,CAAC,YAAY;MAC3C,IAAI,IAAI,CAACf,MAAM,CAACgB,MAAM,KAAK,CAAC,EACxB;MACJ,MAAMC,OAAO,GAAG,IAAI,CAACjB,MAAM;MAC3B,IAAI,CAACA,MAAM,GAAG,EAAE;MAChB,MAAMkB,EAAE,GAAGpC,OAAO,CAAC,UAAU,CAAC;MAC9B,MAAMoC,EAAE,CAACC,MAAM,CAACtC,IAAI,CAACuC,OAAO,CAAC,IAAI,CAACtB,IAAI,CAAC,CAAC;MACxC,MAAMoB,EAAE,CAACG,UAAU,CAAC,IAAI,CAACvB,IAAI,EAAEmB,OAAO,CAACK,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;IAC7D,CAAC,CAAC;IACF,MAAM,IAAI,CAACvB,QAAQ;EACvB;AACJ;AACArB,OAAO,CAACE,MAAM,GAAGA,MAAM"},"metadata":{},"sourceType":"script"}