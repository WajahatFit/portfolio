{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toCached = exports.Config = void 0;\nconst errors_1 = require(\"../errors\");\nconst ejs = require(\"ejs\");\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst url_1 = require(\"url\");\nconst util_1 = require(\"util\");\nconst Plugin = require(\"./plugin\");\nconst util_2 = require(\"./util\");\nconst util_3 = require(\"../util\");\nconst module_loader_1 = require(\"../module-loader\");\nconst util_4 = require(\"../help/util\");\n// eslint-disable-next-line new-cap\nconst debug = (0, util_2.Debug)();\nconst _pjson = require('../../package.json');\nfunction channelFromVersion(version) {\n  const m = version.match(/[^-]+(?:-([^.]+))?/);\n  return m && m[1] || 'stable';\n}\nconst WSL = require('is-wsl');\nfunction isConfig(o) {\n  return o && Boolean(o._base);\n}\nclass Permutations extends Map {\n  constructor() {\n    super(...arguments);\n    this.validPermutations = new Map();\n  }\n  add(permutation, commandId) {\n    this.validPermutations.set(permutation, commandId);\n    for (const id of (0, util_2.collectUsableIds)([permutation])) {\n      if (this.has(id)) {\n        this.set(id, this.get(id).add(commandId));\n      } else {\n        this.set(id, new Set([commandId]));\n      }\n    }\n  }\n  get(key) {\n    return super.get(key) ?? new Set();\n  }\n  getValid(key) {\n    return this.validPermutations.get(key);\n  }\n  getAllValid() {\n    return [...this.validPermutations.keys()];\n  }\n  hasValid(key) {\n    return this.validPermutations.has(key);\n  }\n}\nclass Config {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(options) {\n    this.options = options;\n    this._base = `${_pjson.name}@${_pjson.version}`;\n    this.debug = 0;\n    this.plugins = [];\n    this.topicSeparator = ':';\n    this.warned = false;\n    this.commandPermutations = new Permutations();\n    this.topicPermutations = new Permutations();\n    this._commands = new Map();\n    this._topics = new Map();\n  }\n  static async load() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : module.parent && module.parent.parent && module.parent.parent.filename || __dirname;\n    // Handle the case when a file URL string is passed in such as 'import.meta.url'; covert to file path.\n    if (typeof opts === 'string' && opts.startsWith('file://')) {\n      opts = (0, url_1.fileURLToPath)(opts);\n    }\n    if (typeof opts === 'string') opts = {\n      root: opts\n    };\n    if (isConfig(opts)) return opts;\n    const config = new Config(opts);\n    await config.load();\n    return config;\n  }\n  // eslint-disable-next-line complexity\n  async load() {\n    const plugin = new Plugin.Plugin({\n      root: this.options.root\n    });\n    await plugin.load();\n    this.plugins.push(plugin);\n    this.root = plugin.root;\n    this.pjson = plugin.pjson;\n    this.name = this.pjson.name;\n    this.version = this.options.version || this.pjson.version || '0.0.0';\n    this.channel = this.options.channel || channelFromVersion(this.version);\n    this.valid = plugin.valid;\n    this.arch = os.arch() === 'ia32' ? 'x86' : os.arch();\n    this.platform = WSL ? 'wsl' : os.platform();\n    this.windows = this.platform === 'win32';\n    this.bin = this.pjson.oclif.bin || this.name;\n    this.dirname = this.pjson.oclif.dirname || this.name;\n    this.flexibleTaxonomy = this.pjson.oclif.flexibleTaxonomy || false;\n    // currently, only colons or spaces are valid separators\n    if (this.pjson.oclif.topicSeparator && [':', ' '].includes(this.pjson.oclif.topicSeparator)) this.topicSeparator = this.pjson.oclif.topicSeparator;\n    if (this.platform === 'win32') this.dirname = this.dirname.replace('/', '\\\\');\n    this.userAgent = `${this.name}/${this.version} ${this.platform}-${this.arch} node-${process.version}`;\n    this.shell = this._shell();\n    this.debug = this._debug();\n    this.home = process.env.HOME || this.windows && this.windowsHome() || os.homedir() || os.tmpdir();\n    this.cacheDir = this.scopedEnvVar('CACHE_DIR') || this.macosCacheDir() || this.dir('cache');\n    this.configDir = this.scopedEnvVar('CONFIG_DIR') || this.dir('config');\n    this.dataDir = this.scopedEnvVar('DATA_DIR') || this.dir('data');\n    this.errlog = path.join(this.cacheDir, 'error.log');\n    this.binPath = this.scopedEnvVar('BINPATH');\n    this.npmRegistry = this.scopedEnvVar('NPM_REGISTRY') || this.pjson.oclif.npmRegistry;\n    this.pjson.oclif.update = this.pjson.oclif.update || {};\n    this.pjson.oclif.update.node = this.pjson.oclif.update.node || {};\n    const s3 = this.pjson.oclif.update.s3 || {};\n    this.pjson.oclif.update.s3 = s3;\n    s3.bucket = this.scopedEnvVar('S3_BUCKET') || s3.bucket;\n    if (s3.bucket && !s3.host) s3.host = `https://${s3.bucket}.s3.amazonaws.com`;\n    s3.templates = {\n      ...s3.templates,\n      target: {\n        baseDir: '<%- bin %>',\n        unversioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-<%- platform %>-<%- arch %><%- ext %>\",\n        versioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %>-<%- platform %>-<%- arch %><%- ext %>\",\n        manifest: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- platform %>-<%- arch %>\",\n        ...(s3.templates && s3.templates.target)\n      },\n      vanilla: {\n        unversioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %><%- ext %>\",\n        versioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %><%- ext %>\",\n        baseDir: '<%- bin %>',\n        manifest: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %>version\",\n        ...(s3.templates && s3.templates.vanilla)\n      }\n    };\n    await this.loadUserPlugins();\n    await this.loadDevPlugins();\n    await this.loadCorePlugins();\n    for (const plugin of this.plugins) {\n      this.loadCommands(plugin);\n      this.loadTopics(plugin);\n    }\n    debug('config done');\n  }\n  async loadCorePlugins() {\n    if (this.pjson.oclif.plugins) {\n      await this.loadPlugins(this.root, 'core', this.pjson.oclif.plugins);\n    }\n  }\n  async loadDevPlugins() {\n    if (this.options.devPlugins !== false) {\n      // do not load oclif.devPlugins in production\n      if (this.isProd) return;\n      try {\n        const devPlugins = this.pjson.oclif.devPlugins;\n        if (devPlugins) await this.loadPlugins(this.root, 'dev', devPlugins);\n      } catch (error) {\n        process.emitWarning(error);\n      }\n    }\n  }\n  async loadUserPlugins() {\n    if (this.options.userPlugins !== false) {\n      try {\n        const userPJSONPath = path.join(this.dataDir, 'package.json');\n        debug('reading user plugins pjson %s', userPJSONPath);\n        const pjson = await (0, util_2.loadJSON)(userPJSONPath);\n        this.userPJSON = pjson;\n        if (!pjson.oclif) pjson.oclif = {\n          schema: 1\n        };\n        if (!pjson.oclif.plugins) pjson.oclif.plugins = [];\n        await this.loadPlugins(userPJSONPath, 'user', pjson.oclif.plugins.filter(p => p.type === 'user'));\n        await this.loadPlugins(userPJSONPath, 'link', pjson.oclif.plugins.filter(p => p.type === 'link'));\n      } catch (error) {\n        if (error.code !== 'ENOENT') process.emitWarning(error);\n      }\n    }\n  }\n  async runHook(event, opts, timeout) {\n    debug('start %s hook', event);\n    const search = m => {\n      if (typeof m === 'function') return m;\n      if (m.default && typeof m.default === 'function') return m.default;\n      return Object.values(m).find(m => typeof m === 'function');\n    };\n    const withTimeout = async (ms, promise) => {\n      let id;\n      const timeout = new Promise((_, reject) => {\n        id = setTimeout(() => {\n          reject(new Error(`Timed out after ${ms} ms.`));\n        }, ms).unref();\n      });\n      return Promise.race([promise, timeout]).then(result => {\n        clearTimeout(id);\n        return result;\n      });\n    };\n    const final = {\n      successes: [],\n      failures: []\n    };\n    const promises = this.plugins.map(async p => {\n      const debug = require('debug')([this.bin, p.name, 'hooks', event].join(':'));\n      const context = {\n        config: this,\n        debug,\n        exit() {\n          let code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n          (0, errors_1.exit)(code);\n        },\n        log(message) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          process.stdout.write((0, util_1.format)(message, ...args) + '\\n');\n        },\n        error(message) {\n          let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          (0, errors_1.error)(message, options);\n        },\n        warn(message) {\n          (0, errors_1.warn)(message);\n        }\n      };\n      const hooks = p.hooks[event] || [];\n      for (const hook of hooks) {\n        try {\n          /* eslint-disable no-await-in-loop */\n          const {\n            isESM,\n            module,\n            filePath\n          } = await module_loader_1.default.loadWithData(p, hook);\n          debug('start', isESM ? '(import)' : '(require)', filePath);\n          const result = timeout ? await withTimeout(timeout, search(module).call(context, {\n            ...opts,\n            config: this\n          })) : await search(module).call(context, {\n            ...opts,\n            config: this\n          });\n          final.successes.push({\n            plugin: p,\n            result\n          });\n          debug('done');\n        } catch (error) {\n          final.failures.push({\n            plugin: p,\n            error: error\n          });\n          debug(error);\n        }\n      }\n    });\n    await Promise.all(promises);\n    debug('%s hook done', event);\n    return final;\n  }\n  // eslint-disable-next-line default-param-last\n  async runCommand(id) {\n    let argv = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let cachedCommand = arguments.length > 2 ? arguments[2] : undefined;\n    debug('runCommand %s %o', id, argv);\n    const c = cachedCommand || this.findCommand(id);\n    if (!c) {\n      const matches = this.flexibleTaxonomy ? this.findMatches(id, argv) : [];\n      const hookResult = this.flexibleTaxonomy && matches.length > 0 ? await this.runHook('command_incomplete', {\n        id,\n        argv,\n        matches\n      }) : await this.runHook('command_not_found', {\n        id,\n        argv\n      });\n      if (hookResult.successes[0]) {\n        const cmdResult = hookResult.successes[0].result;\n        return cmdResult;\n      }\n      if (hookResult.failures[0]) {\n        throw hookResult.failures[0].error;\n      }\n      throw new errors_1.CLIError(`command ${id} not found`);\n    }\n    const command = await c.load();\n    await this.runHook('prerun', {\n      Command: command,\n      argv\n    });\n    const result = await command.run(argv, this);\n    await this.runHook('postrun', {\n      Command: command,\n      result: result,\n      argv\n    });\n    return result;\n  }\n  scopedEnvVar(k) {\n    return process.env[this.scopedEnvVarKey(k)];\n  }\n  scopedEnvVarTrue(k) {\n    const v = process.env[this.scopedEnvVarKey(k)];\n    return v === '1' || v === 'true';\n  }\n  scopedEnvVarKey(k) {\n    return [this.bin, k].map(p => p.replace(/@/g, '').replace(/[/-]/g, '_')).join('_').toUpperCase();\n  }\n  findCommand(id) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const lookupId = this.getCmdLookupId(id);\n    const command = this._commands.get(lookupId);\n    if (opts.must && !command) (0, errors_1.error)(`command ${lookupId} not found`);\n    return command;\n  }\n  findTopic(name) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const lookupId = this.getTopicLookupId(name);\n    const topic = this._topics.get(lookupId);\n    if (topic) return topic;\n    if (opts.must) throw new Error(`topic ${name} not found`);\n  }\n  /**\n   * Find all command ids that include the provided command id.\n   *\n   * For example, if the command ids are:\n   * - foo:bar:baz\n   * - one:two:three\n   *\n   * `bar` would return `foo:bar:baz`\n   *\n   * @param partialCmdId string\n   * @param argv string[] process.argv containing the flags and arguments provided by the user\n   * @returns string[]\n   */\n  findMatches(partialCmdId, argv) {\n    const flags = argv.filter(arg => !(0, util_4.getHelpFlagAdditions)(this).includes(arg) && arg.startsWith('-')).map(a => a.replace(/-/g, ''));\n    const possibleMatches = [...this.commandPermutations.get(partialCmdId)].map(k => this._commands.get(k));\n    const matches = possibleMatches.filter(command => {\n      const cmdFlags = Object.entries(command.flags).flatMap(_ref => {\n        let [flag, def] = _ref;\n        return def.char ? [def.char, flag] : [flag];\n      });\n      // A command is a match if the provided flags belong to the full command\n      return flags.every(f => cmdFlags.includes(f));\n    });\n    return matches;\n  }\n  /**\n   * Returns an array of all commands. If flexible taxonomy is enabled then all permutations will be appended to the array.\n   * @returns Command.Loadable[]\n   */\n  getAllCommands() {\n    const commands = [...this._commands.values()];\n    const validPermutations = [...this.commandPermutations.getAllValid()];\n    for (const permutation of validPermutations) {\n      if (!this._commands.has(permutation)) {\n        const cmd = this._commands.get(this.getCmdLookupId(permutation));\n        commands.push({\n          ...cmd,\n          id: permutation\n        });\n      }\n    }\n    return commands;\n  }\n  /**\n   * Returns an array of all command ids. If flexible taxonomy is enabled then all permutations will be appended to the array.\n   * @returns string[]\n   */\n  getAllCommandIDs() {\n    return this.getAllCommands().map(c => c.id);\n  }\n  get commands() {\n    return [...this._commands.values()];\n  }\n  get commandIDs() {\n    if (this._commandIDs) return this._commandIDs;\n    this._commandIDs = this.commands.map(c => c.id);\n    return this._commandIDs;\n  }\n  get topics() {\n    return [...this._topics.values()];\n  }\n  s3Key(type, ext) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (typeof ext === 'object') options = ext;else if (ext) options.ext = ext;\n    const template = this.pjson.oclif.update.s3.templates[options.platform ? 'target' : 'vanilla'][type] ?? '';\n    return ejs.render(template, {\n      ...this,\n      ...options\n    });\n  }\n  s3Url(key) {\n    const host = this.pjson.oclif.update.s3.host;\n    if (!host) throw new Error('no s3 host is set');\n    const url = new url_1.URL(host);\n    url.pathname = path.join(url.pathname, key);\n    return url.toString();\n  }\n  dir(category) {\n    const base = process.env[`XDG_${category.toUpperCase()}_HOME`] || this.windows && process.env.LOCALAPPDATA || path.join(this.home, category === 'data' ? '.local/share' : '.' + category);\n    return path.join(base, this.dirname);\n  }\n  windowsHome() {\n    return this.windowsHomedriveHome() || this.windowsUserprofileHome();\n  }\n  windowsHomedriveHome() {\n    return process.env.HOMEDRIVE && process.env.HOMEPATH && path.join(process.env.HOMEDRIVE, process.env.HOMEPATH);\n  }\n  windowsUserprofileHome() {\n    return process.env.USERPROFILE;\n  }\n  macosCacheDir() {\n    return this.platform === 'darwin' && path.join(this.home, 'Library', 'Caches', this.dirname) || undefined;\n  }\n  _shell() {\n    let shellPath;\n    const {\n      SHELL,\n      COMSPEC\n    } = process.env;\n    if (SHELL) {\n      shellPath = SHELL.split('/');\n    } else if (this.windows && COMSPEC) {\n      shellPath = COMSPEC.split(/\\\\|\\//);\n    } else {\n      shellPath = ['unknown'];\n    }\n    return shellPath[shellPath.length - 1];\n  }\n  _debug() {\n    if (this.scopedEnvVarTrue('DEBUG')) return 1;\n    try {\n      const {\n        enabled\n      } = require('debug')(this.bin);\n      if (enabled) return 1;\n    } catch {}\n    return 0;\n  }\n  async loadPlugins(root, type, plugins, parent) {\n    if (!plugins || plugins.length === 0) return;\n    debug('loading plugins', plugins);\n    await Promise.all((plugins || []).map(async plugin => {\n      try {\n        const opts = {\n          type,\n          root\n        };\n        if (typeof plugin === 'string') {\n          opts.name = plugin;\n        } else {\n          opts.name = plugin.name || opts.name;\n          opts.tag = plugin.tag || opts.tag;\n          opts.root = plugin.root || opts.root;\n        }\n        const instance = new Plugin.Plugin(opts);\n        await instance.load();\n        if (this.plugins.find(p => p.name === instance.name)) return;\n        this.plugins.push(instance);\n        if (parent) {\n          instance.parent = parent;\n          if (!parent.children) parent.children = [];\n          parent.children.push(instance);\n        }\n        await this.loadPlugins(instance.root, type, instance.pjson.oclif.plugins || [], instance);\n      } catch (error) {\n        this.warn(error, 'loadPlugins');\n      }\n    }));\n  }\n  warn(err, scope) {\n    if (this.warned) return;\n    if (typeof err === 'string') {\n      process.emitWarning(err);\n      return;\n    }\n    if (err instanceof Error) {\n      const modifiedErr = err;\n      modifiedErr.name = `${err.name} Plugin: ${this.name}`;\n      modifiedErr.detail = (0, util_2.compact)([err.detail, `module: ${this._base}`, scope && `task: ${scope}`, `plugin: ${this.name}`, `root: ${this.root}`, 'See more details with DEBUG=*']).join('\\n');\n      process.emitWarning(err);\n      return;\n    }\n    // err is an object\n    process.emitWarning('Config.warn expected either a string or Error, but instead received an object');\n    err.name = `${err.name} Plugin: ${this.name}`;\n    err.detail = (0, util_2.compact)([err.detail, `module: ${this._base}`, scope && `task: ${scope}`, `plugin: ${this.name}`, `root: ${this.root}`, 'See more details with DEBUG=*']).join('\\n');\n    process.emitWarning(JSON.stringify(err));\n  }\n  get isProd() {\n    return (0, util_3.isProd)();\n  }\n  getCmdLookupId(id) {\n    if (this._commands.has(id)) return id;\n    if (this.commandPermutations.hasValid(id)) return this.commandPermutations.getValid(id);\n    return id;\n  }\n  getTopicLookupId(id) {\n    if (this._topics.has(id)) return id;\n    if (this.topicPermutations.hasValid(id)) return this.topicPermutations.getValid(id);\n    return id;\n  }\n  loadCommands(plugin) {\n    for (const command of plugin.commands) {\n      if (this._commands.has(command.id)) {\n        const prioritizedCommand = this.determinePriority([this._commands.get(command.id), command]);\n        this._commands.set(prioritizedCommand.id, prioritizedCommand);\n      } else {\n        this._commands.set(command.id, command);\n      }\n      const permutations = this.flexibleTaxonomy ? (0, util_2.getCommandIdPermutations)(command.id) : [command.id];\n      for (const permutation of permutations) {\n        this.commandPermutations.add(permutation, command.id);\n      }\n      for (const alias of command.aliases ?? []) {\n        if (this._commands.has(alias)) {\n          const prioritizedCommand = this.determinePriority([this._commands.get(alias), command]);\n          this._commands.set(prioritizedCommand.id, {\n            ...prioritizedCommand,\n            id: alias\n          });\n        } else {\n          this._commands.set(alias, {\n            ...command,\n            id: alias\n          });\n        }\n        const aliasPermutations = this.flexibleTaxonomy ? (0, util_2.getCommandIdPermutations)(alias) : [alias];\n        for (const permutation of aliasPermutations) {\n          this.commandPermutations.add(permutation, command.id);\n        }\n      }\n    }\n  }\n  loadTopics(plugin) {\n    for (const topic of (0, util_2.compact)(plugin.topics)) {\n      const existing = this._topics.get(topic.name);\n      if (existing) {\n        existing.description = topic.description || existing.description;\n        existing.hidden = existing.hidden || topic.hidden;\n      } else {\n        this._topics.set(topic.name, topic);\n      }\n      const permutations = this.flexibleTaxonomy ? (0, util_2.getCommandIdPermutations)(topic.name) : [topic.name];\n      for (const permutation of permutations) {\n        this.topicPermutations.add(permutation, topic.name);\n      }\n    }\n    // Add missing topics for displaying help when partial commands are entered.\n    for (const c of plugin.commands.filter(c => !c.hidden)) {\n      const parts = c.id.split(':');\n      while (parts.length > 0) {\n        const name = parts.join(':');\n        if (name && !this._topics.has(name)) {\n          this._topics.set(name, {\n            name,\n            description: c.summary || c.description\n          });\n        }\n        parts.pop();\n      }\n    }\n  }\n  /**\n   * This method is responsible for locating the correct plugin to use for a named command id\n   * It searches the {Config} registered commands to match either the raw command id or the command alias\n   * It is possible that more than one command will be found. This is due the ability of two distinct plugins to\n   * create the same command or command alias.\n   *\n   * In the case of more than one found command, the function will select the command based on the order in which\n   * the plugin is included in the package.json `oclif.plugins` list. The command that occurs first in the list\n   * is selected as the command to run.\n   *\n   * Commands can also be present from either an install or a link. When a command is one of these and a core plugin\n   * is present, this function defers to the core plugin.\n   *\n   * If there is not a core plugin command present, this function will return the first\n   * plugin as discovered (will not change the order)\n   *\n   * @param commands commands to determine the priority of\n   * @returns command instance {Command.Loadable} or undefined\n   */\n  determinePriority(commands) {\n    const oclifPlugins = this.pjson.oclif?.plugins ?? [];\n    const commandPlugins = commands.sort((a, b) => {\n      const pluginAliasA = a.pluginAlias ?? 'A-Cannot-Find-This';\n      const pluginAliasB = b.pluginAlias ?? 'B-Cannot-Find-This';\n      const aIndex = oclifPlugins.indexOf(pluginAliasA);\n      const bIndex = oclifPlugins.indexOf(pluginAliasB);\n      // When both plugin types are 'core' plugins sort based on index\n      if (a.pluginType === 'core' && b.pluginType === 'core') {\n        // If b appears first in the pjson.plugins sort it first\n        return aIndex - bIndex;\n      }\n      // if b is a core plugin and a is not sort b first\n      if (b.pluginType === 'core' && a.pluginType !== 'core') {\n        return 1;\n      }\n      // if a is a core plugin and b is not sort a first\n      if (a.pluginType === 'core' && b.pluginType !== 'core') {\n        return -1;\n      }\n      // neither plugin is core, so do not change the order\n      return 0;\n    });\n    return commandPlugins[0];\n  }\n}\nexports.Config = Config;\n// when no manifest exists, the default is calculated.  This may throw, so we need to catch it\nconst defaultToCached = async flag => {\n  // Prefer the helpDefaultValue function (returns a friendly string for complex types)\n  if (typeof flag.defaultHelp === 'function') {\n    try {\n      return await flag.defaultHelp();\n    } catch {\n      return;\n    }\n  }\n  // if not specified, try the default function\n  if (typeof flag.default === 'function') {\n    try {\n      return await flag.default({\n        options: {},\n        flags: {}\n      });\n    } catch {}\n  } else {\n    return flag.default;\n  }\n};\nasync function toCached(c, plugin) {\n  const flags = {};\n  for (const [name, flag] of Object.entries(c.flags || {})) {\n    if (flag.type === 'boolean') {\n      flags[name] = {\n        name,\n        type: flag.type,\n        char: flag.char,\n        summary: flag.summary,\n        description: flag.description,\n        hidden: flag.hidden,\n        required: flag.required,\n        helpLabel: flag.helpLabel,\n        helpGroup: flag.helpGroup,\n        allowNo: flag.allowNo,\n        dependsOn: flag.dependsOn,\n        relationships: flag.relationships,\n        exclusive: flag.exclusive,\n        deprecated: flag.deprecated,\n        aliases: flag.aliases\n      };\n    } else {\n      flags[name] = {\n        name,\n        type: flag.type,\n        char: flag.char,\n        summary: flag.summary,\n        description: flag.description,\n        hidden: flag.hidden,\n        required: flag.required,\n        helpLabel: flag.helpLabel,\n        helpValue: flag.helpValue,\n        helpGroup: flag.helpGroup,\n        multiple: flag.multiple,\n        options: flag.options,\n        dependsOn: flag.dependsOn,\n        relationships: flag.relationships,\n        exclusive: flag.exclusive,\n        default: await defaultToCached(flag),\n        deprecated: flag.deprecated,\n        aliases: flag.aliases\n      };\n      // a command-level placeholder in the manifest so that oclif knows it should regenerate the command during help-time\n      if (typeof flag.defaultHelp === 'function') {\n        c.hasDynamicHelp = true;\n      }\n    }\n  }\n  const argsPromise = (c.args || []).map(async a => ({\n    name: a.name,\n    description: a.description,\n    required: a.required,\n    options: a.options,\n    default: typeof a.default === 'function' ? await a.default({}) : a.default,\n    hidden: a.hidden\n  }));\n  const args = await Promise.all(argsPromise);\n  const stdProperties = {\n    id: c.id,\n    summary: c.summary,\n    description: c.description,\n    strict: c.strict,\n    usage: c.usage,\n    pluginName: plugin && plugin.name,\n    pluginAlias: plugin && plugin.alias,\n    pluginType: plugin && plugin.type,\n    hidden: c.hidden,\n    state: c.state,\n    aliases: c.aliases || [],\n    examples: c.examples || c.example,\n    deprecationOptions: c.deprecationOptions,\n    flags,\n    args\n  };\n  // do not include these properties in manifest\n  const ignoreCommandProperties = ['plugin', '_flags', '_enableJsonFlag', '_globalFlags'];\n  const stdKeys = Object.keys(stdProperties);\n  const keysToAdd = Object.keys(c).filter(property => ![...stdKeys, ...ignoreCommandProperties].includes(property));\n  const additionalProperties = {};\n  for (const key of keysToAdd) {\n    additionalProperties[key] = c[key];\n  }\n  return {\n    ...stdProperties,\n    ...additionalProperties\n  };\n}\nexports.toCached = toCached;","map":{"version":3,"names":["Object","defineProperty","exports","value","toCached","Config","errors_1","require","ejs","os","path","url_1","util_1","Plugin","util_2","util_3","module_loader_1","util_4","debug","Debug","_pjson","channelFromVersion","version","m","match","WSL","isConfig","o","Boolean","_base","Permutations","Map","constructor","arguments","validPermutations","add","permutation","commandId","set","id","collectUsableIds","has","get","Set","key","getValid","getAllValid","keys","hasValid","options","name","plugins","topicSeparator","warned","commandPermutations","topicPermutations","_commands","_topics","load","opts","module","parent","filename","__dirname","startsWith","fileURLToPath","root","config","plugin","push","pjson","channel","valid","arch","platform","windows","bin","oclif","dirname","flexibleTaxonomy","includes","replace","userAgent","process","shell","_shell","_debug","home","env","HOME","windowsHome","homedir","tmpdir","cacheDir","scopedEnvVar","macosCacheDir","dir","configDir","dataDir","errlog","join","binPath","npmRegistry","update","node","s3","bucket","host","templates","target","baseDir","unversioned","versioned","manifest","vanilla","loadUserPlugins","loadDevPlugins","loadCorePlugins","loadCommands","loadTopics","loadPlugins","devPlugins","isProd","error","emitWarning","userPlugins","userPJSONPath","loadJSON","userPJSON","schema","filter","p","type","code","runHook","event","timeout","search","default","values","find","withTimeout","ms","promise","Promise","_","reject","setTimeout","Error","unref","race","then","result","clearTimeout","final","successes","failures","promises","map","context","exit","log","message","args","stdout","write","format","warn","hooks","hook","isESM","filePath","loadWithData","call","all","runCommand","argv","cachedCommand","c","findCommand","matches","findMatches","hookResult","length","cmdResult","CLIError","command","Command","run","k","scopedEnvVarKey","scopedEnvVarTrue","v","toUpperCase","lookupId","getCmdLookupId","must","findTopic","getTopicLookupId","topic","partialCmdId","flags","arg","getHelpFlagAdditions","a","possibleMatches","cmdFlags","entries","flatMap","flag","def","char","every","f","getAllCommands","commands","cmd","getAllCommandIDs","commandIDs","_commandIDs","topics","s3Key","ext","template","render","s3Url","url","URL","pathname","toString","category","base","LOCALAPPDATA","windowsHomedriveHome","windowsUserprofileHome","HOMEDRIVE","HOMEPATH","USERPROFILE","undefined","shellPath","SHELL","COMSPEC","split","enabled","tag","instance","children","err","scope","modifiedErr","detail","compact","JSON","stringify","prioritizedCommand","determinePriority","permutations","getCommandIdPermutations","alias","aliases","aliasPermutations","existing","description","hidden","parts","summary","pop","oclifPlugins","commandPlugins","sort","b","pluginAliasA","pluginAlias","pluginAliasB","aIndex","indexOf","bIndex","pluginType","defaultToCached","defaultHelp","required","helpLabel","helpGroup","allowNo","dependsOn","relationships","exclusive","deprecated","helpValue","multiple","hasDynamicHelp","argsPromise","stdProperties","strict","usage","pluginName","state","examples","example","deprecationOptions","ignoreCommandProperties","stdKeys","keysToAdd","property","additionalProperties"],"sources":["/Users/wajahatfit/Documents/labs/portfolio/portfolio/node_modules/@oclif/core/lib/config/config.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCached = exports.Config = void 0;\nconst errors_1 = require(\"../errors\");\nconst ejs = require(\"ejs\");\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst url_1 = require(\"url\");\nconst util_1 = require(\"util\");\nconst Plugin = require(\"./plugin\");\nconst util_2 = require(\"./util\");\nconst util_3 = require(\"../util\");\nconst module_loader_1 = require(\"../module-loader\");\nconst util_4 = require(\"../help/util\");\n// eslint-disable-next-line new-cap\nconst debug = (0, util_2.Debug)();\nconst _pjson = require('../../package.json');\nfunction channelFromVersion(version) {\n    const m = version.match(/[^-]+(?:-([^.]+))?/);\n    return (m && m[1]) || 'stable';\n}\nconst WSL = require('is-wsl');\nfunction isConfig(o) {\n    return o && Boolean(o._base);\n}\nclass Permutations extends Map {\n    constructor() {\n        super(...arguments);\n        this.validPermutations = new Map();\n    }\n    add(permutation, commandId) {\n        this.validPermutations.set(permutation, commandId);\n        for (const id of (0, util_2.collectUsableIds)([permutation])) {\n            if (this.has(id)) {\n                this.set(id, this.get(id).add(commandId));\n            }\n            else {\n                this.set(id, new Set([commandId]));\n            }\n        }\n    }\n    get(key) {\n        return super.get(key) ?? new Set();\n    }\n    getValid(key) {\n        return this.validPermutations.get(key);\n    }\n    getAllValid() {\n        return [...this.validPermutations.keys()];\n    }\n    hasValid(key) {\n        return this.validPermutations.has(key);\n    }\n}\nclass Config {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(options) {\n        this.options = options;\n        this._base = `${_pjson.name}@${_pjson.version}`;\n        this.debug = 0;\n        this.plugins = [];\n        this.topicSeparator = ':';\n        this.warned = false;\n        this.commandPermutations = new Permutations();\n        this.topicPermutations = new Permutations();\n        this._commands = new Map();\n        this._topics = new Map();\n    }\n    static async load(opts = (module.parent && module.parent.parent && module.parent.parent.filename) || __dirname) {\n        // Handle the case when a file URL string is passed in such as 'import.meta.url'; covert to file path.\n        if (typeof opts === 'string' && opts.startsWith('file://')) {\n            opts = (0, url_1.fileURLToPath)(opts);\n        }\n        if (typeof opts === 'string')\n            opts = { root: opts };\n        if (isConfig(opts))\n            return opts;\n        const config = new Config(opts);\n        await config.load();\n        return config;\n    }\n    // eslint-disable-next-line complexity\n    async load() {\n        const plugin = new Plugin.Plugin({ root: this.options.root });\n        await plugin.load();\n        this.plugins.push(plugin);\n        this.root = plugin.root;\n        this.pjson = plugin.pjson;\n        this.name = this.pjson.name;\n        this.version = this.options.version || this.pjson.version || '0.0.0';\n        this.channel = this.options.channel || channelFromVersion(this.version);\n        this.valid = plugin.valid;\n        this.arch = (os.arch() === 'ia32' ? 'x86' : os.arch());\n        this.platform = WSL ? 'wsl' : os.platform();\n        this.windows = this.platform === 'win32';\n        this.bin = this.pjson.oclif.bin || this.name;\n        this.dirname = this.pjson.oclif.dirname || this.name;\n        this.flexibleTaxonomy = this.pjson.oclif.flexibleTaxonomy || false;\n        // currently, only colons or spaces are valid separators\n        if (this.pjson.oclif.topicSeparator && [':', ' '].includes(this.pjson.oclif.topicSeparator))\n            this.topicSeparator = this.pjson.oclif.topicSeparator;\n        if (this.platform === 'win32')\n            this.dirname = this.dirname.replace('/', '\\\\');\n        this.userAgent = `${this.name}/${this.version} ${this.platform}-${this.arch} node-${process.version}`;\n        this.shell = this._shell();\n        this.debug = this._debug();\n        this.home = process.env.HOME || (this.windows && this.windowsHome()) || os.homedir() || os.tmpdir();\n        this.cacheDir = this.scopedEnvVar('CACHE_DIR') || this.macosCacheDir() || this.dir('cache');\n        this.configDir = this.scopedEnvVar('CONFIG_DIR') || this.dir('config');\n        this.dataDir = this.scopedEnvVar('DATA_DIR') || this.dir('data');\n        this.errlog = path.join(this.cacheDir, 'error.log');\n        this.binPath = this.scopedEnvVar('BINPATH');\n        this.npmRegistry = this.scopedEnvVar('NPM_REGISTRY') || this.pjson.oclif.npmRegistry;\n        this.pjson.oclif.update = this.pjson.oclif.update || {};\n        this.pjson.oclif.update.node = this.pjson.oclif.update.node || {};\n        const s3 = this.pjson.oclif.update.s3 || {};\n        this.pjson.oclif.update.s3 = s3;\n        s3.bucket = this.scopedEnvVar('S3_BUCKET') || s3.bucket;\n        if (s3.bucket && !s3.host)\n            s3.host = `https://${s3.bucket}.s3.amazonaws.com`;\n        s3.templates = {\n            ...s3.templates,\n            target: {\n                baseDir: '<%- bin %>',\n                unversioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-<%- platform %>-<%- arch %><%- ext %>\",\n                versioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %>-<%- platform %>-<%- arch %><%- ext %>\",\n                manifest: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- platform %>-<%- arch %>\",\n                ...s3.templates && s3.templates.target,\n            },\n            vanilla: {\n                unversioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %><%- ext %>\",\n                versioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %><%- ext %>\",\n                baseDir: '<%- bin %>',\n                manifest: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %>version\",\n                ...s3.templates && s3.templates.vanilla,\n            },\n        };\n        await this.loadUserPlugins();\n        await this.loadDevPlugins();\n        await this.loadCorePlugins();\n        for (const plugin of this.plugins) {\n            this.loadCommands(plugin);\n            this.loadTopics(plugin);\n        }\n        debug('config done');\n    }\n    async loadCorePlugins() {\n        if (this.pjson.oclif.plugins) {\n            await this.loadPlugins(this.root, 'core', this.pjson.oclif.plugins);\n        }\n    }\n    async loadDevPlugins() {\n        if (this.options.devPlugins !== false) {\n            // do not load oclif.devPlugins in production\n            if (this.isProd)\n                return;\n            try {\n                const devPlugins = this.pjson.oclif.devPlugins;\n                if (devPlugins)\n                    await this.loadPlugins(this.root, 'dev', devPlugins);\n            }\n            catch (error) {\n                process.emitWarning(error);\n            }\n        }\n    }\n    async loadUserPlugins() {\n        if (this.options.userPlugins !== false) {\n            try {\n                const userPJSONPath = path.join(this.dataDir, 'package.json');\n                debug('reading user plugins pjson %s', userPJSONPath);\n                const pjson = await (0, util_2.loadJSON)(userPJSONPath);\n                this.userPJSON = pjson;\n                if (!pjson.oclif)\n                    pjson.oclif = { schema: 1 };\n                if (!pjson.oclif.plugins)\n                    pjson.oclif.plugins = [];\n                await this.loadPlugins(userPJSONPath, 'user', pjson.oclif.plugins.filter((p) => p.type === 'user'));\n                await this.loadPlugins(userPJSONPath, 'link', pjson.oclif.plugins.filter((p) => p.type === 'link'));\n            }\n            catch (error) {\n                if (error.code !== 'ENOENT')\n                    process.emitWarning(error);\n            }\n        }\n    }\n    async runHook(event, opts, timeout) {\n        debug('start %s hook', event);\n        const search = (m) => {\n            if (typeof m === 'function')\n                return m;\n            if (m.default && typeof m.default === 'function')\n                return m.default;\n            return Object.values(m).find((m) => typeof m === 'function');\n        };\n        const withTimeout = async (ms, promise) => {\n            let id;\n            const timeout = new Promise((_, reject) => {\n                id = setTimeout(() => {\n                    reject(new Error(`Timed out after ${ms} ms.`));\n                }, ms).unref();\n            });\n            return Promise.race([promise, timeout]).then(result => {\n                clearTimeout(id);\n                return result;\n            });\n        };\n        const final = {\n            successes: [],\n            failures: [],\n        };\n        const promises = this.plugins.map(async (p) => {\n            const debug = require('debug')([this.bin, p.name, 'hooks', event].join(':'));\n            const context = {\n                config: this,\n                debug,\n                exit(code = 0) {\n                    (0, errors_1.exit)(code);\n                },\n                log(message, ...args) {\n                    process.stdout.write((0, util_1.format)(message, ...args) + '\\n');\n                },\n                error(message, options = {}) {\n                    (0, errors_1.error)(message, options);\n                },\n                warn(message) {\n                    (0, errors_1.warn)(message);\n                },\n            };\n            const hooks = p.hooks[event] || [];\n            for (const hook of hooks) {\n                try {\n                    /* eslint-disable no-await-in-loop */\n                    const { isESM, module, filePath } = await module_loader_1.default.loadWithData(p, hook);\n                    debug('start', isESM ? '(import)' : '(require)', filePath);\n                    const result = timeout ?\n                        await withTimeout(timeout, search(module).call(context, { ...opts, config: this })) :\n                        await search(module).call(context, { ...opts, config: this });\n                    final.successes.push({ plugin: p, result });\n                    debug('done');\n                }\n                catch (error) {\n                    final.failures.push({ plugin: p, error: error });\n                    debug(error);\n                }\n            }\n        });\n        await Promise.all(promises);\n        debug('%s hook done', event);\n        return final;\n    }\n    // eslint-disable-next-line default-param-last\n    async runCommand(id, argv = [], cachedCommand) {\n        debug('runCommand %s %o', id, argv);\n        const c = cachedCommand || this.findCommand(id);\n        if (!c) {\n            const matches = this.flexibleTaxonomy ? this.findMatches(id, argv) : [];\n            const hookResult = this.flexibleTaxonomy && matches.length > 0 ?\n                await this.runHook('command_incomplete', { id, argv, matches }) :\n                await this.runHook('command_not_found', { id, argv });\n            if (hookResult.successes[0]) {\n                const cmdResult = hookResult.successes[0].result;\n                return cmdResult;\n            }\n            if (hookResult.failures[0]) {\n                throw hookResult.failures[0].error;\n            }\n            throw new errors_1.CLIError(`command ${id} not found`);\n        }\n        const command = await c.load();\n        await this.runHook('prerun', { Command: command, argv });\n        const result = (await command.run(argv, this));\n        await this.runHook('postrun', { Command: command, result: result, argv });\n        return result;\n    }\n    scopedEnvVar(k) {\n        return process.env[this.scopedEnvVarKey(k)];\n    }\n    scopedEnvVarTrue(k) {\n        const v = process.env[this.scopedEnvVarKey(k)];\n        return v === '1' || v === 'true';\n    }\n    scopedEnvVarKey(k) {\n        return [this.bin, k]\n            .map(p => p.replace(/@/g, '').replace(/[/-]/g, '_'))\n            .join('_')\n            .toUpperCase();\n    }\n    findCommand(id, opts = {}) {\n        const lookupId = this.getCmdLookupId(id);\n        const command = this._commands.get(lookupId);\n        if (opts.must && !command)\n            (0, errors_1.error)(`command ${lookupId} not found`);\n        return command;\n    }\n    findTopic(name, opts = {}) {\n        const lookupId = this.getTopicLookupId(name);\n        const topic = this._topics.get(lookupId);\n        if (topic)\n            return topic;\n        if (opts.must)\n            throw new Error(`topic ${name} not found`);\n    }\n    /**\n     * Find all command ids that include the provided command id.\n     *\n     * For example, if the command ids are:\n     * - foo:bar:baz\n     * - one:two:three\n     *\n     * `bar` would return `foo:bar:baz`\n     *\n     * @param partialCmdId string\n     * @param argv string[] process.argv containing the flags and arguments provided by the user\n     * @returns string[]\n     */\n    findMatches(partialCmdId, argv) {\n        const flags = argv.filter(arg => !(0, util_4.getHelpFlagAdditions)(this).includes(arg) && arg.startsWith('-')).map(a => a.replace(/-/g, ''));\n        const possibleMatches = [...this.commandPermutations.get(partialCmdId)].map(k => this._commands.get(k));\n        const matches = possibleMatches.filter(command => {\n            const cmdFlags = Object.entries(command.flags).flatMap(([flag, def]) => {\n                return def.char ? [def.char, flag] : [flag];\n            });\n            // A command is a match if the provided flags belong to the full command\n            return flags.every(f => cmdFlags.includes(f));\n        });\n        return matches;\n    }\n    /**\n     * Returns an array of all commands. If flexible taxonomy is enabled then all permutations will be appended to the array.\n     * @returns Command.Loadable[]\n     */\n    getAllCommands() {\n        const commands = [...this._commands.values()];\n        const validPermutations = [...this.commandPermutations.getAllValid()];\n        for (const permutation of validPermutations) {\n            if (!this._commands.has(permutation)) {\n                const cmd = this._commands.get(this.getCmdLookupId(permutation));\n                commands.push({ ...cmd, id: permutation });\n            }\n        }\n        return commands;\n    }\n    /**\n     * Returns an array of all command ids. If flexible taxonomy is enabled then all permutations will be appended to the array.\n     * @returns string[]\n     */\n    getAllCommandIDs() {\n        return this.getAllCommands().map(c => c.id);\n    }\n    get commands() {\n        return [...this._commands.values()];\n    }\n    get commandIDs() {\n        if (this._commandIDs)\n            return this._commandIDs;\n        this._commandIDs = this.commands.map(c => c.id);\n        return this._commandIDs;\n    }\n    get topics() {\n        return [...this._topics.values()];\n    }\n    s3Key(type, ext, options = {}) {\n        if (typeof ext === 'object')\n            options = ext;\n        else if (ext)\n            options.ext = ext;\n        const template = this.pjson.oclif.update.s3.templates[options.platform ? 'target' : 'vanilla'][type] ?? '';\n        return ejs.render(template, { ...this, ...options });\n    }\n    s3Url(key) {\n        const host = this.pjson.oclif.update.s3.host;\n        if (!host)\n            throw new Error('no s3 host is set');\n        const url = new url_1.URL(host);\n        url.pathname = path.join(url.pathname, key);\n        return url.toString();\n    }\n    dir(category) {\n        const base = process.env[`XDG_${category.toUpperCase()}_HOME`] ||\n            (this.windows && process.env.LOCALAPPDATA) ||\n            path.join(this.home, category === 'data' ? '.local/share' : '.' + category);\n        return path.join(base, this.dirname);\n    }\n    windowsHome() {\n        return this.windowsHomedriveHome() || this.windowsUserprofileHome();\n    }\n    windowsHomedriveHome() {\n        return (process.env.HOMEDRIVE && process.env.HOMEPATH && path.join(process.env.HOMEDRIVE, process.env.HOMEPATH));\n    }\n    windowsUserprofileHome() {\n        return process.env.USERPROFILE;\n    }\n    macosCacheDir() {\n        return (this.platform === 'darwin' && path.join(this.home, 'Library', 'Caches', this.dirname)) || undefined;\n    }\n    _shell() {\n        let shellPath;\n        const { SHELL, COMSPEC } = process.env;\n        if (SHELL) {\n            shellPath = SHELL.split('/');\n        }\n        else if (this.windows && COMSPEC) {\n            shellPath = COMSPEC.split(/\\\\|\\//);\n        }\n        else {\n            shellPath = ['unknown'];\n        }\n        return shellPath[shellPath.length - 1];\n    }\n    _debug() {\n        if (this.scopedEnvVarTrue('DEBUG'))\n            return 1;\n        try {\n            const { enabled } = require('debug')(this.bin);\n            if (enabled)\n                return 1;\n        }\n        catch { }\n        return 0;\n    }\n    async loadPlugins(root, type, plugins, parent) {\n        if (!plugins || plugins.length === 0)\n            return;\n        debug('loading plugins', plugins);\n        await Promise.all((plugins || []).map(async (plugin) => {\n            try {\n                const opts = { type, root };\n                if (typeof plugin === 'string') {\n                    opts.name = plugin;\n                }\n                else {\n                    opts.name = plugin.name || opts.name;\n                    opts.tag = plugin.tag || opts.tag;\n                    opts.root = plugin.root || opts.root;\n                }\n                const instance = new Plugin.Plugin(opts);\n                await instance.load();\n                if (this.plugins.find(p => p.name === instance.name))\n                    return;\n                this.plugins.push(instance);\n                if (parent) {\n                    instance.parent = parent;\n                    if (!parent.children)\n                        parent.children = [];\n                    parent.children.push(instance);\n                }\n                await this.loadPlugins(instance.root, type, instance.pjson.oclif.plugins || [], instance);\n            }\n            catch (error) {\n                this.warn(error, 'loadPlugins');\n            }\n        }));\n    }\n    warn(err, scope) {\n        if (this.warned)\n            return;\n        if (typeof err === 'string') {\n            process.emitWarning(err);\n            return;\n        }\n        if (err instanceof Error) {\n            const modifiedErr = err;\n            modifiedErr.name = `${err.name} Plugin: ${this.name}`;\n            modifiedErr.detail = (0, util_2.compact)([\n                err.detail,\n                `module: ${this._base}`,\n                scope && `task: ${scope}`,\n                `plugin: ${this.name}`,\n                `root: ${this.root}`,\n                'See more details with DEBUG=*',\n            ]).join('\\n');\n            process.emitWarning(err);\n            return;\n        }\n        // err is an object\n        process.emitWarning('Config.warn expected either a string or Error, but instead received an object');\n        err.name = `${err.name} Plugin: ${this.name}`;\n        err.detail = (0, util_2.compact)([\n            err.detail,\n            `module: ${this._base}`,\n            scope && `task: ${scope}`,\n            `plugin: ${this.name}`,\n            `root: ${this.root}`,\n            'See more details with DEBUG=*',\n        ]).join('\\n');\n        process.emitWarning(JSON.stringify(err));\n    }\n    get isProd() {\n        return (0, util_3.isProd)();\n    }\n    getCmdLookupId(id) {\n        if (this._commands.has(id))\n            return id;\n        if (this.commandPermutations.hasValid(id))\n            return this.commandPermutations.getValid(id);\n        return id;\n    }\n    getTopicLookupId(id) {\n        if (this._topics.has(id))\n            return id;\n        if (this.topicPermutations.hasValid(id))\n            return this.topicPermutations.getValid(id);\n        return id;\n    }\n    loadCommands(plugin) {\n        for (const command of plugin.commands) {\n            if (this._commands.has(command.id)) {\n                const prioritizedCommand = this.determinePriority([this._commands.get(command.id), command]);\n                this._commands.set(prioritizedCommand.id, prioritizedCommand);\n            }\n            else {\n                this._commands.set(command.id, command);\n            }\n            const permutations = this.flexibleTaxonomy ? (0, util_2.getCommandIdPermutations)(command.id) : [command.id];\n            for (const permutation of permutations) {\n                this.commandPermutations.add(permutation, command.id);\n            }\n            for (const alias of command.aliases ?? []) {\n                if (this._commands.has(alias)) {\n                    const prioritizedCommand = this.determinePriority([this._commands.get(alias), command]);\n                    this._commands.set(prioritizedCommand.id, { ...prioritizedCommand, id: alias });\n                }\n                else {\n                    this._commands.set(alias, { ...command, id: alias });\n                }\n                const aliasPermutations = this.flexibleTaxonomy ? (0, util_2.getCommandIdPermutations)(alias) : [alias];\n                for (const permutation of aliasPermutations) {\n                    this.commandPermutations.add(permutation, command.id);\n                }\n            }\n        }\n    }\n    loadTopics(plugin) {\n        for (const topic of (0, util_2.compact)(plugin.topics)) {\n            const existing = this._topics.get(topic.name);\n            if (existing) {\n                existing.description = topic.description || existing.description;\n                existing.hidden = existing.hidden || topic.hidden;\n            }\n            else {\n                this._topics.set(topic.name, topic);\n            }\n            const permutations = this.flexibleTaxonomy ? (0, util_2.getCommandIdPermutations)(topic.name) : [topic.name];\n            for (const permutation of permutations) {\n                this.topicPermutations.add(permutation, topic.name);\n            }\n        }\n        // Add missing topics for displaying help when partial commands are entered.\n        for (const c of plugin.commands.filter(c => !c.hidden)) {\n            const parts = c.id.split(':');\n            while (parts.length > 0) {\n                const name = parts.join(':');\n                if (name && !this._topics.has(name)) {\n                    this._topics.set(name, { name, description: c.summary || c.description });\n                }\n                parts.pop();\n            }\n        }\n    }\n    /**\n     * This method is responsible for locating the correct plugin to use for a named command id\n     * It searches the {Config} registered commands to match either the raw command id or the command alias\n     * It is possible that more than one command will be found. This is due the ability of two distinct plugins to\n     * create the same command or command alias.\n     *\n     * In the case of more than one found command, the function will select the command based on the order in which\n     * the plugin is included in the package.json `oclif.plugins` list. The command that occurs first in the list\n     * is selected as the command to run.\n     *\n     * Commands can also be present from either an install or a link. When a command is one of these and a core plugin\n     * is present, this function defers to the core plugin.\n     *\n     * If there is not a core plugin command present, this function will return the first\n     * plugin as discovered (will not change the order)\n     *\n     * @param commands commands to determine the priority of\n     * @returns command instance {Command.Loadable} or undefined\n     */\n    determinePriority(commands) {\n        const oclifPlugins = this.pjson.oclif?.plugins ?? [];\n        const commandPlugins = commands.sort((a, b) => {\n            const pluginAliasA = a.pluginAlias ?? 'A-Cannot-Find-This';\n            const pluginAliasB = b.pluginAlias ?? 'B-Cannot-Find-This';\n            const aIndex = oclifPlugins.indexOf(pluginAliasA);\n            const bIndex = oclifPlugins.indexOf(pluginAliasB);\n            // When both plugin types are 'core' plugins sort based on index\n            if (a.pluginType === 'core' && b.pluginType === 'core') {\n                // If b appears first in the pjson.plugins sort it first\n                return aIndex - bIndex;\n            }\n            // if b is a core plugin and a is not sort b first\n            if (b.pluginType === 'core' && a.pluginType !== 'core') {\n                return 1;\n            }\n            // if a is a core plugin and b is not sort a first\n            if (a.pluginType === 'core' && b.pluginType !== 'core') {\n                return -1;\n            }\n            // neither plugin is core, so do not change the order\n            return 0;\n        });\n        return commandPlugins[0];\n    }\n}\nexports.Config = Config;\n// when no manifest exists, the default is calculated.  This may throw, so we need to catch it\nconst defaultToCached = async (flag) => {\n    // Prefer the helpDefaultValue function (returns a friendly string for complex types)\n    if (typeof flag.defaultHelp === 'function') {\n        try {\n            return await flag.defaultHelp();\n        }\n        catch {\n            return;\n        }\n    }\n    // if not specified, try the default function\n    if (typeof flag.default === 'function') {\n        try {\n            return await flag.default({ options: {}, flags: {} });\n        }\n        catch { }\n    }\n    else {\n        return flag.default;\n    }\n};\nasync function toCached(c, plugin) {\n    const flags = {};\n    for (const [name, flag] of Object.entries(c.flags || {})) {\n        if (flag.type === 'boolean') {\n            flags[name] = {\n                name,\n                type: flag.type,\n                char: flag.char,\n                summary: flag.summary,\n                description: flag.description,\n                hidden: flag.hidden,\n                required: flag.required,\n                helpLabel: flag.helpLabel,\n                helpGroup: flag.helpGroup,\n                allowNo: flag.allowNo,\n                dependsOn: flag.dependsOn,\n                relationships: flag.relationships,\n                exclusive: flag.exclusive,\n                deprecated: flag.deprecated,\n                aliases: flag.aliases,\n            };\n        }\n        else {\n            flags[name] = {\n                name,\n                type: flag.type,\n                char: flag.char,\n                summary: flag.summary,\n                description: flag.description,\n                hidden: flag.hidden,\n                required: flag.required,\n                helpLabel: flag.helpLabel,\n                helpValue: flag.helpValue,\n                helpGroup: flag.helpGroup,\n                multiple: flag.multiple,\n                options: flag.options,\n                dependsOn: flag.dependsOn,\n                relationships: flag.relationships,\n                exclusive: flag.exclusive,\n                default: await defaultToCached(flag),\n                deprecated: flag.deprecated,\n                aliases: flag.aliases,\n            };\n            // a command-level placeholder in the manifest so that oclif knows it should regenerate the command during help-time\n            if (typeof flag.defaultHelp === 'function') {\n                c.hasDynamicHelp = true;\n            }\n        }\n    }\n    const argsPromise = (c.args || []).map(async (a) => ({\n        name: a.name,\n        description: a.description,\n        required: a.required,\n        options: a.options,\n        default: typeof a.default === 'function' ? await a.default({}) : a.default,\n        hidden: a.hidden,\n    }));\n    const args = await Promise.all(argsPromise);\n    const stdProperties = {\n        id: c.id,\n        summary: c.summary,\n        description: c.description,\n        strict: c.strict,\n        usage: c.usage,\n        pluginName: plugin && plugin.name,\n        pluginAlias: plugin && plugin.alias,\n        pluginType: plugin && plugin.type,\n        hidden: c.hidden,\n        state: c.state,\n        aliases: c.aliases || [],\n        examples: c.examples || c.example,\n        deprecationOptions: c.deprecationOptions,\n        flags,\n        args,\n    };\n    // do not include these properties in manifest\n    const ignoreCommandProperties = ['plugin', '_flags', '_enableJsonFlag', '_globalFlags'];\n    const stdKeys = Object.keys(stdProperties);\n    const keysToAdd = Object.keys(c).filter(property => ![...stdKeys, ...ignoreCommandProperties].includes(property));\n    const additionalProperties = {};\n    for (const key of keysToAdd) {\n        additionalProperties[key] = c[key];\n    }\n    return { ...stdProperties, ...additionalProperties };\n}\nexports.toCached = toCached;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}