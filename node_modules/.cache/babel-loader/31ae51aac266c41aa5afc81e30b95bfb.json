{"ast":null,"code":"'use strict';\n\nvar redeyed = require('redeyed');\nvar theme = require('../themes/default');\nvar colors = require('ansicolors');\nvar colorSurround = colors.brightBlack;\nvar surroundClose = '\\u001b[39m';\nfunction trimEmptyLines(lines) {\n  // remove lines from the end until we find a non-empy one\n  var line = lines.pop();\n  while (!line || !line.length) {\n    line = lines.pop();\n  }\n\n  // put the non-empty line back\n  if (line) lines.push(line);\n}\nfunction addLinenos(highlightedCode, firstline) {\n  var highlightedLines = highlightedCode.split('\\n');\n  trimEmptyLines(highlightedLines);\n  var linesLen = highlightedLines.length;\n  var lines = [];\n  var totalDigits;\n  var lineno;\n  function getDigits(n) {\n    if (n < 10) return 1;\n    if (n < 100) return 2;\n    if (n < 1000) return 3;\n    if (n < 10000) return 4;\n    // this works for up to 99,999 lines - any questions?\n    return 5;\n  }\n  function pad(n, totalDigits) {\n    // not pretty, but simple and should perform quite well\n    var padDigits = totalDigits - getDigits(n);\n    switch (padDigits) {\n      case 0:\n        return '' + n;\n      case 1:\n        return ' ' + n;\n      case 2:\n        return '  ' + n;\n      case 3:\n        return '   ' + n;\n      case 4:\n        return '    ' + n;\n      case 5:\n        return '     ' + n;\n    }\n  }\n  totalDigits = getDigits(linesLen + firstline - 1);\n  for (var i = 0; i < linesLen; i++) {\n    // Don't close the escape sequence here in order to not break multi line code highlights like block comments\n    lineno = colorSurround(pad(i + firstline, totalDigits) + ': ').replace(surroundClose, '');\n    lines.push(lineno + highlightedLines[i]);\n  }\n  return lines.join('\\n');\n}\nmodule.exports = function highlight(code, opts) {\n  opts = opts || {};\n  try {\n    var result = redeyed(code, opts.theme || theme, {\n      jsx: !!opts.jsx\n    });\n    var firstline = opts.firstline && !isNaN(opts.firstline) ? opts.firstline : 1;\n    return opts.linenos ? addLinenos(result.code, firstline) : result.code;\n  } catch (e) {\n    e.message = 'Unable to perform highlight. The code contained syntax errors: ' + e.message;\n    throw e;\n  }\n};","map":{"version":3,"names":["redeyed","require","theme","colors","colorSurround","brightBlack","surroundClose","trimEmptyLines","lines","line","pop","length","push","addLinenos","highlightedCode","firstline","highlightedLines","split","linesLen","totalDigits","lineno","getDigits","n","pad","padDigits","i","replace","join","module","exports","highlight","code","opts","result","jsx","isNaN","linenos","e","message"],"sources":["/Users/wajahatfit/Documents/labs/portfolio/portfolio/node_modules/cardinal/lib/highlight.js"],"sourcesContent":["'use strict'\n\nvar redeyed =  require('redeyed')\nvar theme   =  require('../themes/default')\nvar colors  =  require('ansicolors')\n\nvar colorSurround =  colors.brightBlack\nvar surroundClose =  '\\u001b[39m'\n\nfunction trimEmptyLines(lines) {\n  // remove lines from the end until we find a non-empy one\n  var line = lines.pop()\n  while (!line || !line.length)    {\n line = lines.pop()\n}\n\n  // put the non-empty line back\n  if (line) lines.push(line)\n}\n\nfunction addLinenos(highlightedCode, firstline) {\n  var highlightedLines = highlightedCode.split('\\n')\n\n  trimEmptyLines(highlightedLines)\n\n  var linesLen = highlightedLines.length\n  var lines = []\n  var totalDigits\n  var lineno\n\n  function getDigits(n) {\n    if (n < 10) return 1\n    if (n < 100) return 2\n    if (n < 1000) return 3\n    if (n < 10000) return 4\n    // this works for up to 99,999 lines - any questions?\n    return 5\n  }\n\n  function pad(n, totalDigits) {\n    // not pretty, but simple and should perform quite well\n    var padDigits = totalDigits - getDigits(n)\n    switch (padDigits) {\n      case 0: return '' + n\n      case 1: return ' ' + n\n      case 2: return '  ' + n\n      case 3: return '   ' + n\n      case 4: return '    ' + n\n      case 5: return '     ' + n\n    }\n  }\n\n  totalDigits = getDigits(linesLen + firstline - 1)\n\n  for (var i = 0; i < linesLen; i++) {\n    // Don't close the escape sequence here in order to not break multi line code highlights like block comments\n    lineno = colorSurround(pad(i + firstline, totalDigits) + ': ').replace(surroundClose, '')\n    lines.push(lineno + highlightedLines[i])\n  }\n\n  return lines.join('\\n')\n}\n\nmodule.exports = function highlight(code, opts) {\n  opts = opts || { }\n  try {\n    var result = redeyed(code, opts.theme || theme, { jsx: !!opts.jsx })\n    var firstline = opts.firstline && !isNaN(opts.firstline) ? opts.firstline : 1\n\n    return opts.linenos ? addLinenos(result.code, firstline) : result.code\n  } catch (e) {\n    e.message = 'Unable to perform highlight. The code contained syntax errors: ' + e.message\n    throw e\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}