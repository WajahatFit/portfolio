{"ast":null,"code":"'use strict';\n\nconst os = require('os');\nconst escapeStringRegexp = require('escape-string-regexp');\nconst extractPathRegex = /\\s+at.*[(\\s](.*)\\)?/;\nconst pathRegex = /^(?:(?:(?:node|(?:(?:node:)?internal\\/[\\w/]*|.*node_modules\\/(?:babel-polyfill|pirates)\\/.*)?\\w+)(?:\\.js)?:\\d+:\\d+)|native)/;\nconst homeDir = typeof os.homedir === 'undefined' ? '' : os.homedir();\nmodule.exports = function (stack) {\n  let {\n    pretty = false,\n    basePath\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const basePathRegex = basePath && new RegExp(`(at | \\\\()${escapeStringRegexp(basePath)}`, 'g');\n  return stack.replace(/\\\\/g, '/').split('\\n').filter(line => {\n    const pathMatches = line.match(extractPathRegex);\n    if (pathMatches === null || !pathMatches[1]) {\n      return true;\n    }\n    const match = pathMatches[1];\n\n    // Electron\n    if (match.includes('.app/Contents/Resources/electron.asar') || match.includes('.app/Contents/Resources/default_app.asar')) {\n      return false;\n    }\n    return !pathRegex.test(match);\n  }).filter(line => line.trim() !== '').map(line => {\n    if (basePathRegex) {\n      line = line.replace(basePathRegex, '$1');\n    }\n    if (pretty) {\n      line = line.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));\n    }\n    return line;\n  }).join('\\n');\n};","map":{"version":3,"names":["os","require","escapeStringRegexp","extractPathRegex","pathRegex","homeDir","homedir","module","exports","stack","pretty","basePath","basePathRegex","RegExp","replace","split","filter","line","pathMatches","match","includes","test","trim","map","m","p1","join"],"sources":["/Users/wajahatfit/Documents/labs/portfolio/portfolio/node_modules/clean-stack/index.js"],"sourcesContent":["'use strict';\nconst os = require('os');\nconst escapeStringRegexp = require('escape-string-regexp');\n\nconst extractPathRegex = /\\s+at.*[(\\s](.*)\\)?/;\nconst pathRegex = /^(?:(?:(?:node|(?:(?:node:)?internal\\/[\\w/]*|.*node_modules\\/(?:babel-polyfill|pirates)\\/.*)?\\w+)(?:\\.js)?:\\d+:\\d+)|native)/;\nconst homeDir = typeof os.homedir === 'undefined' ? '' : os.homedir();\n\nmodule.exports = (stack, {pretty = false, basePath} = {}) => {\n\tconst basePathRegex = basePath && new RegExp(`(at | \\\\()${escapeStringRegexp(basePath)}`, 'g');\n\n\treturn stack.replace(/\\\\/g, '/')\n\t\t.split('\\n')\n\t\t.filter(line => {\n\t\t\tconst pathMatches = line.match(extractPathRegex);\n\t\t\tif (pathMatches === null || !pathMatches[1]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst match = pathMatches[1];\n\n\t\t\t// Electron\n\t\t\tif (\n\t\t\t\tmatch.includes('.app/Contents/Resources/electron.asar') ||\n\t\t\t\tmatch.includes('.app/Contents/Resources/default_app.asar')\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !pathRegex.test(match);\n\t\t})\n\t\t.filter(line => line.trim() !== '')\n\t\t.map(line => {\n\t\t\tif (basePathRegex) {\n\t\t\t\tline = line.replace(basePathRegex, '$1');\n\t\t\t}\n\n\t\t\tif (pretty) {\n\t\t\t\tline = line.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));\n\t\t\t}\n\n\t\t\treturn line;\n\t\t})\n\t\t.join('\\n');\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAE1D,MAAME,gBAAgB,GAAG,qBAAqB;AAC9C,MAAMC,SAAS,GAAG,6HAA6H;AAC/I,MAAMC,OAAO,GAAG,OAAOL,EAAE,CAACM,OAAO,KAAK,WAAW,GAAG,EAAE,GAAGN,EAAE,CAACM,OAAO,EAAE;AAErEC,MAAM,CAACC,OAAO,GAAG,UAACC,KAAK,EAAsC;EAAA,IAApC;IAACC,MAAM,GAAG,KAAK;IAAEC;EAAQ,CAAC,uEAAG,CAAC,CAAC;EACvD,MAAMC,aAAa,GAAGD,QAAQ,IAAI,IAAIE,MAAM,CAAE,aAAYX,kBAAkB,CAACS,QAAQ,CAAE,EAAC,EAAE,GAAG,CAAC;EAE9F,OAAOF,KAAK,CAACK,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAC9BC,KAAK,CAAC,IAAI,CAAC,CACXC,MAAM,CAACC,IAAI,IAAI;IACf,MAAMC,WAAW,GAAGD,IAAI,CAACE,KAAK,CAAChB,gBAAgB,CAAC;IAChD,IAAIe,WAAW,KAAK,IAAI,IAAI,CAACA,WAAW,CAAC,CAAC,CAAC,EAAE;MAC5C,OAAO,IAAI;IACZ;IAEA,MAAMC,KAAK,GAAGD,WAAW,CAAC,CAAC,CAAC;;IAE5B;IACA,IACCC,KAAK,CAACC,QAAQ,CAAC,uCAAuC,CAAC,IACvDD,KAAK,CAACC,QAAQ,CAAC,0CAA0C,CAAC,EACzD;MACD,OAAO,KAAK;IACb;IAEA,OAAO,CAAChB,SAAS,CAACiB,IAAI,CAACF,KAAK,CAAC;EAC9B,CAAC,CAAC,CACDH,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACK,IAAI,EAAE,KAAK,EAAE,CAAC,CAClCC,GAAG,CAACN,IAAI,IAAI;IACZ,IAAIL,aAAa,EAAE;MAClBK,IAAI,GAAGA,IAAI,CAACH,OAAO,CAACF,aAAa,EAAE,IAAI,CAAC;IACzC;IAEA,IAAIF,MAAM,EAAE;MACXO,IAAI,GAAGA,IAAI,CAACH,OAAO,CAACX,gBAAgB,EAAE,CAACqB,CAAC,EAAEC,EAAE,KAAKD,CAAC,CAACV,OAAO,CAACW,EAAE,EAAEA,EAAE,CAACX,OAAO,CAACT,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;IAC1F;IAEA,OAAOY,IAAI;EACZ,CAAC,CAAC,CACDS,IAAI,CAAC,IAAI,CAAC;AACb,CAAC"},"metadata":{},"sourceType":"script"}