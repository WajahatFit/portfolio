{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Plugin = void 0;\nconst errors_1 = require(\"../errors\");\nconst path = require(\"path\");\nconst util_1 = require(\"util\");\nconst config_1 = require(\"./config\");\nconst util_2 = require(\"./util\");\nconst ts_node_1 = require(\"./ts-node\");\nconst util_3 = require(\"./util\");\nconst util_4 = require(\"../util\");\nconst module_loader_1 = require(\"../module-loader\");\nconst _pjson = require('../../package.json');\nfunction topicsToArray(input, base) {\n  if (!input) return [];\n  base = base ? `${base}:` : '';\n  if (Array.isArray(input)) {\n    return input.concat((0, util_3.flatMap)(input, t => topicsToArray(t.subtopics, `${base}${t.name}`)));\n  }\n  return (0, util_3.flatMap)(Object.keys(input), k => {\n    input[k].name = k;\n    return [{\n      ...input[k],\n      name: `${base}${k}`\n    }].concat(topicsToArray(input[k].subtopics, `${base}${input[k].name}`));\n  });\n}\n// essentially just \"cd ..\"\nfunction* up(from) {\n  while (path.dirname(from) !== from) {\n    yield from;\n    from = path.dirname(from);\n  }\n  yield from;\n}\nasync function findSourcesRoot(root) {\n  for (const next of up(root)) {\n    const cur = path.join(next, 'package.json');\n    // eslint-disable-next-line no-await-in-loop\n    if (await (0, util_3.exists)(cur)) return path.dirname(cur);\n  }\n}\n/**\n * @returns string\n * @param name string\n * @param root string\n * find package root\n * for packages installed into node_modules this will go up directories until\n * it finds a node_modules directory with the plugin installed into it\n *\n * This is needed because some oclif plugins do not declare the `main` field in their package.json\n * https://github.com/oclif/config/pull/289#issuecomment-983904051\n */\nasync function findRootLegacy(name, root) {\n  for (const next of up(root)) {\n    let cur;\n    if (name) {\n      cur = path.join(next, 'node_modules', name, 'package.json');\n      // eslint-disable-next-line no-await-in-loop\n      if (await (0, util_3.exists)(cur)) return path.dirname(cur);\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        const pkg = await (0, util_3.loadJSON)(path.join(next, 'package.json'));\n        if (pkg.name === name) return next;\n      } catch {}\n    } else {\n      cur = path.join(next, 'package.json');\n      // eslint-disable-next-line no-await-in-loop\n      if (await (0, util_3.exists)(cur)) return path.dirname(cur);\n    }\n  }\n}\nasync function findRoot(name, root) {\n  if (name) {\n    let pkgPath;\n    try {\n      pkgPath = (0, util_3.resolvePackage)(name, {\n        paths: [root]\n      });\n    } catch {}\n    return pkgPath ? findSourcesRoot(path.dirname(pkgPath)) : findRootLegacy(name, root);\n  }\n  return findSourcesRoot(root);\n}\nclass Plugin {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(options) {\n    this.options = options;\n    // static loadedPlugins: {[name: string]: Plugin} = {}\n    this._base = `${_pjson.name}@${_pjson.version}`;\n    this.valid = false;\n    this.alreadyLoaded = false;\n    this.children = [];\n    // eslint-disable-next-line new-cap\n    this._debug = (0, util_2.Debug)();\n    this.warned = false;\n  }\n  async load() {\n    this.type = this.options.type || 'core';\n    this.tag = this.options.tag;\n    const root = await findRoot(this.options.name, this.options.root);\n    if (!root) throw new Error(`could not find package.json with ${(0, util_1.inspect)(this.options)}`);\n    this.root = root;\n    this._debug('reading %s plugin %s', this.type, root);\n    this.pjson = await (0, util_3.loadJSON)(path.join(root, 'package.json'));\n    this.name = this.pjson.name;\n    this.alias = this.options.name ?? this.pjson.name;\n    const pjsonPath = path.join(root, 'package.json');\n    if (!this.name) throw new Error(`no name in ${pjsonPath}`);\n    if (!(0, util_4.isProd)() && !this.pjson.files) this.warn(`files attribute must be specified in ${pjsonPath}`);\n    // eslint-disable-next-line new-cap\n    this._debug = (0, util_2.Debug)(this.name);\n    this.version = this.pjson.version;\n    if (this.pjson.oclif) {\n      this.valid = true;\n    } else {\n      this.pjson.oclif = this.pjson['cli-engine'] || {};\n    }\n    this.hooks = (0, util_3.mapValues)(this.pjson.oclif.hooks || {}, i => Array.isArray(i) ? i : [i]);\n    this.manifest = await this._manifest(Boolean(this.options.ignoreManifest), Boolean(this.options.errorOnManifestCreate));\n    this.commands = Object.entries(this.manifest.commands).map(_ref => {\n      let [id, c] = _ref;\n      return {\n        ...c,\n        pluginAlias: this.alias,\n        pluginType: this.type,\n        load: async () => this.findCommand(id, {\n          must: true\n        })\n      };\n    }).sort((a, b) => a.id.localeCompare(b.id));\n  }\n  get topics() {\n    return topicsToArray(this.pjson.oclif.topics || {});\n  }\n  get commandsDir() {\n    return (0, ts_node_1.tsPath)(this.root, this.pjson.oclif.commands);\n  }\n  get commandIDs() {\n    if (!this.commandsDir) return [];\n    let globby;\n    try {\n      const globbyPath = require.resolve('globby', {\n        paths: [this.root, __dirname]\n      });\n      globby = require(globbyPath);\n    } catch (error) {\n      this.warn(error, 'not loading commands, globby not found');\n      return [];\n    }\n    this._debug(`loading IDs from ${this.commandsDir}`);\n    const patterns = ['**/*.+(js|cjs|mjs|ts|tsx)', '!**/*.+(d.ts|test.ts|test.js|spec.ts|spec.js)?(x)'];\n    const ids = globby.sync(patterns, {\n      cwd: this.commandsDir\n    }).map(file => {\n      const p = path.parse(file);\n      const topics = p.dir.split('/');\n      const command = p.name !== 'index' && p.name;\n      const id = [...topics, command].filter(f => f).join(':');\n      return id === '' ? '.' : id;\n    });\n    this._debug('found commands', ids);\n    return ids;\n  }\n  async findCommand(id) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const fetch = async () => {\n      if (!this.commandsDir) return;\n      const search = cmd => {\n        if (typeof cmd.run === 'function') return cmd;\n        if (cmd.default && cmd.default.run) return cmd.default;\n        return Object.values(cmd).find(cmd => typeof cmd.run === 'function');\n      };\n      let m;\n      try {\n        const p = path.join(this.pjson.oclif.commands, ...id.split(':'));\n        const {\n          isESM,\n          module,\n          filePath\n        } = await module_loader_1.default.loadWithData(this, p);\n        this._debug(isESM ? '(import)' : '(require)', filePath);\n        m = module;\n      } catch (error) {\n        if (!opts.must && error.code === 'MODULE_NOT_FOUND') return;\n        throw error;\n      }\n      const cmd = search(m);\n      if (!cmd) return;\n      cmd.id = id;\n      cmd.plugin = this;\n      return cmd;\n    };\n    const cmd = await fetch();\n    if (!cmd && opts.must) (0, errors_1.error)(`command ${id} not found`);\n    return cmd;\n  }\n  async _manifest(ignoreManifest) {\n    var _this = this;\n    let errorOnManifestCreate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const readManifest = async function () {\n      let dotfile = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      try {\n        const p = path.join(_this.root, `${dotfile ? '.' : ''}oclif.manifest.json`);\n        const manifest = await (0, util_3.loadJSON)(p);\n        if (!process.env.OCLIF_NEXT_VERSION && manifest.version.split('-')[0] !== _this.version.split('-')[0]) {\n          process.emitWarning(`Mismatched version in ${_this.name} plugin manifest. Expected: ${_this.version} Received: ${manifest.version}\\nThis usually means you have an oclif.manifest.json file that should be deleted in development. This file should be automatically generated when publishing.`);\n        } else {\n          _this._debug('using manifest from', p);\n          return manifest;\n        }\n      } catch (error) {\n        if (error.code === 'ENOENT') {\n          if (!dotfile) return readManifest(true);\n        } else {\n          _this.warn(error, 'readManifest');\n        }\n      }\n    };\n    if (!ignoreManifest) {\n      const manifest = await readManifest();\n      if (manifest) return manifest;\n    }\n    return {\n      version: this.version,\n      commands: (await Promise.all(this.commandIDs.map(async id => {\n        try {\n          return [id, await (0, config_1.toCached)(await this.findCommand(id, {\n            must: true\n          }), this)];\n        } catch (error) {\n          const scope = 'toCached';\n          if (Boolean(errorOnManifestCreate) === false) this.warn(error, scope);else throw this.addErrorScope(error, scope);\n        }\n      }))).filter(f => Boolean(f)).reduce((commands, _ref2) => {\n        let [id, c] = _ref2;\n        commands[id] = c;\n        return commands;\n      }, {})\n    };\n  }\n  warn(err, scope) {\n    if (this.warned) return;\n    if (typeof err === 'string') err = new Error(err);\n    process.emitWarning(this.addErrorScope(err, scope));\n  }\n  addErrorScope(err, scope) {\n    err.name = `${err.name} Plugin: ${this.name}`;\n    err.detail = (0, util_3.compact)([err.detail, `module: ${this._base}`, scope && `task: ${scope}`, `plugin: ${this.name}`, `root: ${this.root}`, 'See more details with DEBUG=*']).join('\\n');\n    return err;\n  }\n}\nexports.Plugin = Plugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","Plugin","errors_1","require","path","util_1","config_1","util_2","ts_node_1","util_3","util_4","module_loader_1","_pjson","topicsToArray","input","base","Array","isArray","concat","flatMap","t","subtopics","name","keys","k","up","from","dirname","findSourcesRoot","root","next","cur","join","exists","findRootLegacy","pkg","loadJSON","findRoot","pkgPath","resolvePackage","paths","constructor","options","_base","version","valid","alreadyLoaded","children","_debug","Debug","warned","load","type","tag","Error","inspect","pjson","alias","pjsonPath","isProd","files","warn","oclif","hooks","mapValues","i","manifest","_manifest","Boolean","ignoreManifest","errorOnManifestCreate","commands","entries","map","id","c","pluginAlias","pluginType","findCommand","must","sort","a","b","localeCompare","topics","commandsDir","tsPath","commandIDs","globby","globbyPath","resolve","__dirname","error","patterns","ids","sync","cwd","file","p","parse","dir","split","command","filter","f","opts","fetch","search","cmd","run","default","values","find","m","isESM","module","filePath","loadWithData","code","plugin","readManifest","dotfile","process","env","OCLIF_NEXT_VERSION","emitWarning","Promise","all","toCached","scope","addErrorScope","reduce","err","detail","compact"],"sources":["/Users/wajahatfit/Documents/labs/portfolio/portfolio/node_modules/@oclif/core/lib/config/plugin.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Plugin = void 0;\nconst errors_1 = require(\"../errors\");\nconst path = require(\"path\");\nconst util_1 = require(\"util\");\nconst config_1 = require(\"./config\");\nconst util_2 = require(\"./util\");\nconst ts_node_1 = require(\"./ts-node\");\nconst util_3 = require(\"./util\");\nconst util_4 = require(\"../util\");\nconst module_loader_1 = require(\"../module-loader\");\nconst _pjson = require('../../package.json');\nfunction topicsToArray(input, base) {\n    if (!input)\n        return [];\n    base = base ? `${base}:` : '';\n    if (Array.isArray(input)) {\n        return input.concat((0, util_3.flatMap)(input, t => topicsToArray(t.subtopics, `${base}${t.name}`)));\n    }\n    return (0, util_3.flatMap)(Object.keys(input), k => {\n        input[k].name = k;\n        return [{ ...input[k], name: `${base}${k}` }].concat(topicsToArray(input[k].subtopics, `${base}${input[k].name}`));\n    });\n}\n// essentially just \"cd ..\"\nfunction* up(from) {\n    while (path.dirname(from) !== from) {\n        yield from;\n        from = path.dirname(from);\n    }\n    yield from;\n}\nasync function findSourcesRoot(root) {\n    for (const next of up(root)) {\n        const cur = path.join(next, 'package.json');\n        // eslint-disable-next-line no-await-in-loop\n        if (await (0, util_3.exists)(cur))\n            return path.dirname(cur);\n    }\n}\n/**\n * @returns string\n * @param name string\n * @param root string\n * find package root\n * for packages installed into node_modules this will go up directories until\n * it finds a node_modules directory with the plugin installed into it\n *\n * This is needed because some oclif plugins do not declare the `main` field in their package.json\n * https://github.com/oclif/config/pull/289#issuecomment-983904051\n */\nasync function findRootLegacy(name, root) {\n    for (const next of up(root)) {\n        let cur;\n        if (name) {\n            cur = path.join(next, 'node_modules', name, 'package.json');\n            // eslint-disable-next-line no-await-in-loop\n            if (await (0, util_3.exists)(cur))\n                return path.dirname(cur);\n            try {\n                // eslint-disable-next-line no-await-in-loop\n                const pkg = await (0, util_3.loadJSON)(path.join(next, 'package.json'));\n                if (pkg.name === name)\n                    return next;\n            }\n            catch { }\n        }\n        else {\n            cur = path.join(next, 'package.json');\n            // eslint-disable-next-line no-await-in-loop\n            if (await (0, util_3.exists)(cur))\n                return path.dirname(cur);\n        }\n    }\n}\nasync function findRoot(name, root) {\n    if (name) {\n        let pkgPath;\n        try {\n            pkgPath = (0, util_3.resolvePackage)(name, { paths: [root] });\n        }\n        catch { }\n        return pkgPath ? findSourcesRoot(path.dirname(pkgPath)) : findRootLegacy(name, root);\n    }\n    return findSourcesRoot(root);\n}\nclass Plugin {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(options) {\n        this.options = options;\n        // static loadedPlugins: {[name: string]: Plugin} = {}\n        this._base = `${_pjson.name}@${_pjson.version}`;\n        this.valid = false;\n        this.alreadyLoaded = false;\n        this.children = [];\n        // eslint-disable-next-line new-cap\n        this._debug = (0, util_2.Debug)();\n        this.warned = false;\n    }\n    async load() {\n        this.type = this.options.type || 'core';\n        this.tag = this.options.tag;\n        const root = await findRoot(this.options.name, this.options.root);\n        if (!root)\n            throw new Error(`could not find package.json with ${(0, util_1.inspect)(this.options)}`);\n        this.root = root;\n        this._debug('reading %s plugin %s', this.type, root);\n        this.pjson = await (0, util_3.loadJSON)(path.join(root, 'package.json'));\n        this.name = this.pjson.name;\n        this.alias = this.options.name ?? this.pjson.name;\n        const pjsonPath = path.join(root, 'package.json');\n        if (!this.name)\n            throw new Error(`no name in ${pjsonPath}`);\n        if (!(0, util_4.isProd)() && !this.pjson.files)\n            this.warn(`files attribute must be specified in ${pjsonPath}`);\n        // eslint-disable-next-line new-cap\n        this._debug = (0, util_2.Debug)(this.name);\n        this.version = this.pjson.version;\n        if (this.pjson.oclif) {\n            this.valid = true;\n        }\n        else {\n            this.pjson.oclif = this.pjson['cli-engine'] || {};\n        }\n        this.hooks = (0, util_3.mapValues)(this.pjson.oclif.hooks || {}, i => Array.isArray(i) ? i : [i]);\n        this.manifest = await this._manifest(Boolean(this.options.ignoreManifest), Boolean(this.options.errorOnManifestCreate));\n        this.commands = Object\n            .entries(this.manifest.commands)\n            .map(([id, c]) => ({ ...c, pluginAlias: this.alias, pluginType: this.type, load: async () => this.findCommand(id, { must: true }) }))\n            .sort((a, b) => a.id.localeCompare(b.id));\n    }\n    get topics() {\n        return topicsToArray(this.pjson.oclif.topics || {});\n    }\n    get commandsDir() {\n        return (0, ts_node_1.tsPath)(this.root, this.pjson.oclif.commands);\n    }\n    get commandIDs() {\n        if (!this.commandsDir)\n            return [];\n        let globby;\n        try {\n            const globbyPath = require.resolve('globby', { paths: [this.root, __dirname] });\n            globby = require(globbyPath);\n        }\n        catch (error) {\n            this.warn(error, 'not loading commands, globby not found');\n            return [];\n        }\n        this._debug(`loading IDs from ${this.commandsDir}`);\n        const patterns = [\n            '**/*.+(js|cjs|mjs|ts|tsx)',\n            '!**/*.+(d.ts|test.ts|test.js|spec.ts|spec.js)?(x)',\n        ];\n        const ids = globby.sync(patterns, { cwd: this.commandsDir })\n            .map(file => {\n            const p = path.parse(file);\n            const topics = p.dir.split('/');\n            const command = p.name !== 'index' && p.name;\n            const id = [...topics, command].filter(f => f).join(':');\n            return id === '' ? '.' : id;\n        });\n        this._debug('found commands', ids);\n        return ids;\n    }\n    async findCommand(id, opts = {}) {\n        const fetch = async () => {\n            if (!this.commandsDir)\n                return;\n            const search = (cmd) => {\n                if (typeof cmd.run === 'function')\n                    return cmd;\n                if (cmd.default && cmd.default.run)\n                    return cmd.default;\n                return Object.values(cmd).find((cmd) => typeof cmd.run === 'function');\n            };\n            let m;\n            try {\n                const p = path.join(this.pjson.oclif.commands, ...id.split(':'));\n                const { isESM, module, filePath } = await module_loader_1.default.loadWithData(this, p);\n                this._debug(isESM ? '(import)' : '(require)', filePath);\n                m = module;\n            }\n            catch (error) {\n                if (!opts.must && error.code === 'MODULE_NOT_FOUND')\n                    return;\n                throw error;\n            }\n            const cmd = search(m);\n            if (!cmd)\n                return;\n            cmd.id = id;\n            cmd.plugin = this;\n            return cmd;\n        };\n        const cmd = await fetch();\n        if (!cmd && opts.must)\n            (0, errors_1.error)(`command ${id} not found`);\n        return cmd;\n    }\n    async _manifest(ignoreManifest, errorOnManifestCreate = false) {\n        const readManifest = async (dotfile = false) => {\n            try {\n                const p = path.join(this.root, `${dotfile ? '.' : ''}oclif.manifest.json`);\n                const manifest = await (0, util_3.loadJSON)(p);\n                if (!process.env.OCLIF_NEXT_VERSION && manifest.version.split('-')[0] !== this.version.split('-')[0]) {\n                    process.emitWarning(`Mismatched version in ${this.name} plugin manifest. Expected: ${this.version} Received: ${manifest.version}\\nThis usually means you have an oclif.manifest.json file that should be deleted in development. This file should be automatically generated when publishing.`);\n                }\n                else {\n                    this._debug('using manifest from', p);\n                    return manifest;\n                }\n            }\n            catch (error) {\n                if (error.code === 'ENOENT') {\n                    if (!dotfile)\n                        return readManifest(true);\n                }\n                else {\n                    this.warn(error, 'readManifest');\n                }\n            }\n        };\n        if (!ignoreManifest) {\n            const manifest = await readManifest();\n            if (manifest)\n                return manifest;\n        }\n        return {\n            version: this.version,\n            commands: (await Promise.all(this.commandIDs.map(async (id) => {\n                try {\n                    return [id, await (0, config_1.toCached)(await this.findCommand(id, { must: true }), this)];\n                }\n                catch (error) {\n                    const scope = 'toCached';\n                    if (Boolean(errorOnManifestCreate) === false)\n                        this.warn(error, scope);\n                    else\n                        throw this.addErrorScope(error, scope);\n                }\n            })))\n                .filter((f) => Boolean(f))\n                .reduce((commands, [id, c]) => {\n                commands[id] = c;\n                return commands;\n            }, {}),\n        };\n    }\n    warn(err, scope) {\n        if (this.warned)\n            return;\n        if (typeof err === 'string')\n            err = new Error(err);\n        process.emitWarning(this.addErrorScope(err, scope));\n    }\n    addErrorScope(err, scope) {\n        err.name = `${err.name} Plugin: ${this.name}`;\n        err.detail = (0, util_3.compact)([err.detail, `module: ${this._base}`, scope && `task: ${scope}`, `plugin: ${this.name}`, `root: ${this.root}`, 'See more details with DEBUG=*']).join('\\n');\n        return err;\n    }\n}\nexports.Plugin = Plugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}