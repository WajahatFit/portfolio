{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tsPath = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst settings_1 = require(\"../settings\");\nconst util_1 = require(\"../util\");\nconst util_2 = require(\"./util\");\n// eslint-disable-next-line new-cap\nconst debug = (0, util_2.Debug)('ts-node');\nfunction loadTSConfig(root) {\n  const tsconfigPath = path.join(root, 'tsconfig.json');\n  let typescript;\n  try {\n    typescript = require('typescript');\n  } catch {\n    try {\n      typescript = require(root + '/node_modules/typescript');\n    } catch {}\n  }\n  if (fs.existsSync(tsconfigPath) && typescript) {\n    const tsconfig = typescript.parseConfigFileTextToJson(tsconfigPath, fs.readFileSync(tsconfigPath, 'utf8')).config;\n    if (!tsconfig || !tsconfig.compilerOptions) {\n      throw new Error(`Could not read and parse tsconfig.json at ${tsconfigPath}, or it ` + 'did not contain a \"compilerOptions\" section.');\n    }\n    return tsconfig;\n  }\n}\nfunction tsPath(root, orig) {\n  if (!orig) return orig;\n  orig = path.join(root, orig);\n  const skipTSNode =\n  // the CLI specifically turned it off\n  settings_1.settings.tsnodeEnabled === false ||\n  // the CLI didn't specify ts-node and it is production\n  settings_1.settings.tsnodeEnabled === undefined && (0, util_1.isProd)();\n  if (skipTSNode) return orig;\n  try {\n    const tsconfig = loadTSConfig(root);\n    if (!tsconfig) return orig;\n    const {\n      rootDir,\n      rootDirs,\n      outDir\n    } = tsconfig.compilerOptions;\n    const rootDirPath = rootDir || (rootDirs || [])[0];\n    if (!rootDirPath || !outDir) return orig;\n    // rewrite path from ./lib/foo to ./src/foo\n    const lib = path.join(root, outDir); // ./lib\n    const src = path.join(root, rootDirPath); // ./src\n    const relative = path.relative(lib, orig); // ./commands\n    // For hooks, it might point to a js file, not a module. Something like \"./hooks/myhook.js\" which doesn't need the js.\n    const out = path.join(src, relative).replace(/\\.js$/, ''); // ./src/commands\n    // this can be a directory of commands or point to a hook file\n    // if it's a directory, we check if the path exists. If so, return the path to the directory.\n    // For hooks, it might point to a module, not a file. Something like \"./hooks/myhook\"\n    // That file doesn't exist, and the real file is \"./hooks/myhook.ts\"\n    // In that case we attempt to resolve to the filename. If it fails it will revert back to the lib path\n    if (fs.existsSync(out) || fs.existsSync(out + '.ts')) return out;\n    return orig;\n  } catch (error) {\n    debug(error);\n    return orig;\n  }\n}\nexports.tsPath = tsPath;","map":{"version":3,"names":["Object","defineProperty","exports","value","tsPath","fs","require","path","settings_1","util_1","util_2","debug","Debug","loadTSConfig","root","tsconfigPath","join","typescript","existsSync","tsconfig","parseConfigFileTextToJson","readFileSync","config","compilerOptions","Error","orig","skipTSNode","settings","tsnodeEnabled","undefined","isProd","rootDir","rootDirs","outDir","rootDirPath","lib","src","relative","out","replace","error"],"sources":["/Users/wajahatfit/Documents/labs/portfolio/portfolio/node_modules/@oclif/core/lib/config/ts-node.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tsPath = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst settings_1 = require(\"../settings\");\nconst util_1 = require(\"../util\");\nconst util_2 = require(\"./util\");\n// eslint-disable-next-line new-cap\nconst debug = (0, util_2.Debug)('ts-node');\nfunction loadTSConfig(root) {\n    const tsconfigPath = path.join(root, 'tsconfig.json');\n    let typescript;\n    try {\n        typescript = require('typescript');\n    }\n    catch {\n        try {\n            typescript = require(root + '/node_modules/typescript');\n        }\n        catch { }\n    }\n    if (fs.existsSync(tsconfigPath) && typescript) {\n        const tsconfig = typescript.parseConfigFileTextToJson(tsconfigPath, fs.readFileSync(tsconfigPath, 'utf8')).config;\n        if (!tsconfig || !tsconfig.compilerOptions) {\n            throw new Error(`Could not read and parse tsconfig.json at ${tsconfigPath}, or it ` +\n                'did not contain a \"compilerOptions\" section.');\n        }\n        return tsconfig;\n    }\n}\nfunction tsPath(root, orig) {\n    if (!orig)\n        return orig;\n    orig = path.join(root, orig);\n    const skipTSNode = \n    // the CLI specifically turned it off\n    (settings_1.settings.tsnodeEnabled === false) ||\n        // the CLI didn't specify ts-node and it is production\n        (settings_1.settings.tsnodeEnabled === undefined && (0, util_1.isProd)());\n    if (skipTSNode)\n        return orig;\n    try {\n        const tsconfig = loadTSConfig(root);\n        if (!tsconfig)\n            return orig;\n        const { rootDir, rootDirs, outDir } = tsconfig.compilerOptions;\n        const rootDirPath = rootDir || (rootDirs || [])[0];\n        if (!rootDirPath || !outDir)\n            return orig;\n        // rewrite path from ./lib/foo to ./src/foo\n        const lib = path.join(root, outDir); // ./lib\n        const src = path.join(root, rootDirPath); // ./src\n        const relative = path.relative(lib, orig); // ./commands\n        // For hooks, it might point to a js file, not a module. Something like \"./hooks/myhook.js\" which doesn't need the js.\n        const out = path.join(src, relative).replace(/\\.js$/, ''); // ./src/commands\n        // this can be a directory of commands or point to a hook file\n        // if it's a directory, we check if the path exists. If so, return the path to the directory.\n        // For hooks, it might point to a module, not a file. Something like \"./hooks/myhook\"\n        // That file doesn't exist, and the real file is \"./hooks/myhook.ts\"\n        // In that case we attempt to resolve to the filename. If it fails it will revert back to the lib path\n        if (fs.existsSync(out) || fs.existsSync(out + '.ts'))\n            return out;\n        return orig;\n    }\n    catch (error) {\n        debug(error);\n        return orig;\n    }\n}\nexports.tsPath = tsPath;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}