{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// this code is largely taken from opn\nconst childProcess = require(\"child_process\");\nconst isWsl = require('is-wsl');\nfunction open(target) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // opts = {wait: true, ...opts}\n  let cmd;\n  let appArgs = [];\n  let args = [];\n  const cpOpts = {};\n  if (Array.isArray(opts.app)) {\n    appArgs = opts.app.slice(1);\n    opts.app = opts.app[0];\n  }\n  if (process.platform === 'darwin') {\n    cmd = 'open';\n    // if (opts.wait) {\n    //   args.push('-W')\n    // }\n    if (opts.app) {\n      args.push('-a', opts.app);\n    }\n  } else if (process.platform === 'win32' || isWsl) {\n    cmd = 'cmd' + (isWsl ? '.exe' : '');\n    args.push('/c', 'start', '\"\"', '/b');\n    target = target.replace(/&/g, '^&');\n    // if (opts.wait) {\n    //   args.push('/wait')\n    // }\n    if (opts.app) {\n      args.push(opts.app);\n    }\n    if (appArgs.length > 0) {\n      args = [...args, ...appArgs];\n    }\n  } else {\n    cmd = opts.app ? opts.app : 'xdg-open';\n    if (appArgs.length > 0) {\n      args = [...args, ...appArgs];\n    }\n    // if (!opts.wait) {\n    // `xdg-open` will block the process unless\n    // stdio is ignored and it's detached from the parent\n    // even if it's unref'd\n    cpOpts.stdio = 'ignore';\n    cpOpts.detached = true;\n    // }\n  }\n\n  args.push(target);\n  if (process.platform === 'darwin' && appArgs.length > 0) {\n    args.push('--args');\n    args = [...args, ...appArgs];\n  }\n  const cp = childProcess.spawn(cmd, args, cpOpts);\n  return new Promise((resolve, reject) => {\n    cp.once('error', reject);\n    cp.once('close', code => {\n      if (Number.isInteger(code) && code > 0) {\n        reject(new Error('Exited with code ' + code));\n        return;\n      }\n      resolve(cp);\n    });\n  });\n}\nexports.default = open;","map":{"version":3,"names":["Object","defineProperty","exports","value","childProcess","require","isWsl","open","target","opts","cmd","appArgs","args","cpOpts","Array","isArray","app","slice","process","platform","push","replace","length","stdio","detached","cp","spawn","Promise","resolve","reject","once","code","Number","isInteger","Error","default"],"sources":["/Users/wajahatfit/Documents/labs/portfolio/portfolio/node_modules/@oclif/core/lib/cli-ux/open.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// this code is largely taken from opn\nconst childProcess = require(\"child_process\");\nconst isWsl = require('is-wsl');\nfunction open(target, opts = {}) {\n    // opts = {wait: true, ...opts}\n    let cmd;\n    let appArgs = [];\n    let args = [];\n    const cpOpts = {};\n    if (Array.isArray(opts.app)) {\n        appArgs = opts.app.slice(1);\n        opts.app = opts.app[0];\n    }\n    if (process.platform === 'darwin') {\n        cmd = 'open';\n        // if (opts.wait) {\n        //   args.push('-W')\n        // }\n        if (opts.app) {\n            args.push('-a', opts.app);\n        }\n    }\n    else if (process.platform === 'win32' || isWsl) {\n        cmd = 'cmd' + (isWsl ? '.exe' : '');\n        args.push('/c', 'start', '\"\"', '/b');\n        target = target.replace(/&/g, '^&');\n        // if (opts.wait) {\n        //   args.push('/wait')\n        // }\n        if (opts.app) {\n            args.push(opts.app);\n        }\n        if (appArgs.length > 0) {\n            args = [...args, ...appArgs];\n        }\n    }\n    else {\n        cmd = opts.app ? opts.app : 'xdg-open';\n        if (appArgs.length > 0) {\n            args = [...args, ...appArgs];\n        }\n        // if (!opts.wait) {\n        // `xdg-open` will block the process unless\n        // stdio is ignored and it's detached from the parent\n        // even if it's unref'd\n        cpOpts.stdio = 'ignore';\n        cpOpts.detached = true;\n        // }\n    }\n    args.push(target);\n    if (process.platform === 'darwin' && appArgs.length > 0) {\n        args.push('--args');\n        args = [...args, ...appArgs];\n    }\n    const cp = childProcess.spawn(cmd, args, cpOpts);\n    return new Promise((resolve, reject) => {\n        cp.once('error', reject);\n        cp.once('close', code => {\n            if (Number.isInteger(code) && code > 0) {\n                reject(new Error('Exited with code ' + code));\n                return;\n            }\n            resolve(cp);\n        });\n    });\n}\nexports.default = open;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC7C,MAAMC,KAAK,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC/B,SAASE,IAAI,CAACC,MAAM,EAAa;EAAA,IAAXC,IAAI,uEAAG,CAAC,CAAC;EAC3B;EACA,IAAIC,GAAG;EACP,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,IAAI,GAAG,EAAE;EACb,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,IAAIC,KAAK,CAACC,OAAO,CAACN,IAAI,CAACO,GAAG,CAAC,EAAE;IACzBL,OAAO,GAAGF,IAAI,CAACO,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC;IAC3BR,IAAI,CAACO,GAAG,GAAGP,IAAI,CAACO,GAAG,CAAC,CAAC,CAAC;EAC1B;EACA,IAAIE,OAAO,CAACC,QAAQ,KAAK,QAAQ,EAAE;IAC/BT,GAAG,GAAG,MAAM;IACZ;IACA;IACA;IACA,IAAID,IAAI,CAACO,GAAG,EAAE;MACVJ,IAAI,CAACQ,IAAI,CAAC,IAAI,EAAEX,IAAI,CAACO,GAAG,CAAC;IAC7B;EACJ,CAAC,MACI,IAAIE,OAAO,CAACC,QAAQ,KAAK,OAAO,IAAIb,KAAK,EAAE;IAC5CI,GAAG,GAAG,KAAK,IAAIJ,KAAK,GAAG,MAAM,GAAG,EAAE,CAAC;IACnCM,IAAI,CAACQ,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC;IACpCZ,MAAM,GAAGA,MAAM,CAACa,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;IACnC;IACA;IACA;IACA,IAAIZ,IAAI,CAACO,GAAG,EAAE;MACVJ,IAAI,CAACQ,IAAI,CAACX,IAAI,CAACO,GAAG,CAAC;IACvB;IACA,IAAIL,OAAO,CAACW,MAAM,GAAG,CAAC,EAAE;MACpBV,IAAI,GAAG,CAAC,GAAGA,IAAI,EAAE,GAAGD,OAAO,CAAC;IAChC;EACJ,CAAC,MACI;IACDD,GAAG,GAAGD,IAAI,CAACO,GAAG,GAAGP,IAAI,CAACO,GAAG,GAAG,UAAU;IACtC,IAAIL,OAAO,CAACW,MAAM,GAAG,CAAC,EAAE;MACpBV,IAAI,GAAG,CAAC,GAAGA,IAAI,EAAE,GAAGD,OAAO,CAAC;IAChC;IACA;IACA;IACA;IACA;IACAE,MAAM,CAACU,KAAK,GAAG,QAAQ;IACvBV,MAAM,CAACW,QAAQ,GAAG,IAAI;IACtB;EACJ;;EACAZ,IAAI,CAACQ,IAAI,CAACZ,MAAM,CAAC;EACjB,IAAIU,OAAO,CAACC,QAAQ,KAAK,QAAQ,IAAIR,OAAO,CAACW,MAAM,GAAG,CAAC,EAAE;IACrDV,IAAI,CAACQ,IAAI,CAAC,QAAQ,CAAC;IACnBR,IAAI,GAAG,CAAC,GAAGA,IAAI,EAAE,GAAGD,OAAO,CAAC;EAChC;EACA,MAAMc,EAAE,GAAGrB,YAAY,CAACsB,KAAK,CAAChB,GAAG,EAAEE,IAAI,EAAEC,MAAM,CAAC;EAChD,OAAO,IAAIc,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCJ,EAAE,CAACK,IAAI,CAAC,OAAO,EAAED,MAAM,CAAC;IACxBJ,EAAE,CAACK,IAAI,CAAC,OAAO,EAAEC,IAAI,IAAI;MACrB,IAAIC,MAAM,CAACC,SAAS,CAACF,IAAI,CAAC,IAAIA,IAAI,GAAG,CAAC,EAAE;QACpCF,MAAM,CAAC,IAAIK,KAAK,CAAC,mBAAmB,GAAGH,IAAI,CAAC,CAAC;QAC7C;MACJ;MACAH,OAAO,CAACH,EAAE,CAAC;IACf,CAAC,CAAC;EACN,CAAC,CAAC;AACN;AACAvB,OAAO,CAACiC,OAAO,GAAG5B,IAAI"},"metadata":{},"sourceType":"script"}